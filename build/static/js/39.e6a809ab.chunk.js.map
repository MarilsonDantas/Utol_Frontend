{"version":3,"sources":["app/views/material-kit/dialog/SimpleDialog.jsx","app/views/material-kit/dialog/SimpleAlerts.jsx","app/views/material-kit/dialog/DialogTransition.jsx","app/views/material-kit/dialog/FormDialog.jsx","app/views/material-kit/dialog/CustomizedDialog.jsx","app/views/material-kit/dialog/FullScreenDialog.jsx","app/views/material-kit/dialog/OptimalSizeDialog.jsx","app/views/material-kit/dialog/ResponsiveDialog.jsx","app/views/material-kit/dialog/ConfirmationDialog.jsx","app/views/material-kit/dialog/AppDialog.jsx"],"names":["emails","useStyles","makeStyles","avatar","backgroundColor","blue","color","SimpleDialog","props","classes","onClose","selectedValue","other","handleListItemClick","value","Dialog","aria-labelledby","DialogTitle","id","List","map","email","ListItem","button","onClick","key","ListItemAvatar","Avatar","className","ListItemText","primary","SimpleDialogDemo","React","useState","open","setOpen","setSelectedValue","Typography","variant","Button","AlertDialog","handleClose","aria-describedby","DialogContent","DialogContentText","DialogActions","autoFocus","Transition","forwardRef","ref","Slide","direction","AlertDialogSlide","TransitionComponent","keepMounted","FormDialog","TextField","margin","label","type","fullWidth","withStyles","theme","root","padding","spacing","closeButton","position","right","top","palette","grey","children","disableTypography","IconButton","aria-label","MuiDialogContent","MuiDialogActions","CustomizedDialogs","Component","state","handleClickOpen","this","setState","render","dividers","gutterBottom","appBar","title","marginLeft","flex","FullScreenDialog","fullScreen","AppBar","Toolbar","edge","secondary","Divider","form","display","flexDirection","width","formControl","marginTop","minWidth","formControlLabel","MaxWidthDialog","setFullWidth","maxWidth","setMaxWidth","Fragment","noValidate","FormControl","InputLabel","htmlFor","Select","onChange","event","target","inputProps","name","MenuItem","FormControlLabel","control","Switch","checked","ResponsiveDialog","useTheme","useMediaQuery","breakpoints","down","options","ConfirmationDialogRaw","valueProp","setValue","radioGroupRef","useRef","useEffect","disableBackdropClick","disableEscapeKeyDown","onEntering","current","focus","RadioGroup","newValue","option","Radio","background","paper","maxHeight","ConfirmationDialog","component","role","divider","disabled","aria-haspopup","aria-controls","AppDialog","routeSegments","path","CustomizedDialog"],"mappings":"2TAgBA,MAAMA,EAAS,CAAC,qBAAsB,oBAChCC,EAAYC,YAAW,CAC3BC,OAAQ,CACNC,gBAAiBC,IAAK,KACtBC,MAAOD,IAAK,QAIhB,SAASE,EAAaC,GACpB,MAAMC,EAAUR,IACRS,EAAqCF,EAArCE,QAASC,EAA4BH,EAA5BG,cAAkBC,EAFR,YAEkBJ,EAFlB,6BAQ3B,SAASK,EAAoBC,GAC3BJ,EAAQI,GAGV,OACE,kBAACC,EAAA,EAAD,eACEL,QAVJ,WACEA,EAAQC,IAUNK,kBAAgB,uBACZJ,GAEJ,kBAACK,EAAA,EAAD,CAAaC,GAAG,uBAAhB,sBACA,kBAACC,EAAA,EAAD,KACGnB,EAAOoB,IAAIC,GACV,kBAACC,EAAA,EAAD,CACEC,QAAM,EACNC,QAAS,IAAMX,EAAoBQ,GACnCI,IAAKJ,GAEL,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,UAAWnB,EAAQN,QACzB,kBAAC,IAAD,QAGJ,kBAAC0B,EAAA,EAAD,CAAcC,QAAST,MAI3B,kBAACC,EAAA,EAAD,CAAUC,QAAM,EAACC,QAAS,IAAMX,EAAoB,eAClD,kBAACa,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,QAGJ,kBAACE,EAAA,EAAD,CAAcC,QAAQ,mBAajB,SAASC,IAAoB,MAAD,EACjBC,IAAMC,UAAS,GADE,mBAClCC,EADkC,KAC5BC,EAD4B,OAECH,IAAMC,SAASjC,EAAO,IAFvB,mBAElCW,EAFkC,KAEnByB,EAFmB,KAazC,OACE,6BACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,aAApB,aAA2C3B,GAC3C,6BACA,kBAAC4B,EAAA,EAAD,CAAQD,QAAQ,WAAWhC,MAAM,UAAUkB,QAb/C,WACEW,GAAQ,KAYN,sBAGA,kBAAC5B,EAAD,CACEI,cAAeA,EACfuB,KAAMA,EACNxB,QAfcI,IAClBqB,GAAQ,GACRC,EAAiBtB,O,kCChFN,SAAS0B,IAAe,MAAD,EACZR,IAAMC,UAAS,GADH,mBAC7BC,EAD6B,KACvBC,EADuB,KAOpC,SAASM,IACPN,GAAQ,GAGV,OACE,6BACE,kBAACI,EAAA,EAAD,CAAQD,QAAQ,WAAWhC,MAAM,UAAUkB,QAV/C,WACEW,GAAQ,KASN,qBAGA,kBAACpB,EAAA,EAAD,CACEmB,KAAMA,EACNxB,QAAS+B,EACTzB,kBAAgB,qBAChB0B,mBAAiB,4BAEjB,kBAACzB,EAAA,EAAD,CAAaC,GAAG,sBACb,kCAEH,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmB1B,GAAG,4BAAtB,kIAKF,kBAAC2B,EAAA,EAAD,KACE,kBAACN,EAAA,EAAD,CAAQf,QAASiB,EAAanC,MAAM,WAApC,YAGA,kBAACiC,EAAA,EAAD,CAAQf,QAASiB,EAAanC,MAAM,UAAUwC,WAAS,GAAvD,Y,cClCV,MAAMC,EAAaf,IAAMgB,YAAW,SAAoBxC,EAAOyC,GAC7D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASzC,OAG9B,SAAS4C,IAAoB,MAAD,EACjBpB,IAAMC,UAAS,GADE,mBAClCC,EADkC,KAC5BC,EAD4B,KAOzC,SAASM,IACPN,GAAQ,GAGV,OACE,6BACE,kBAACI,EAAA,EAAD,CAAQD,QAAQ,WAAWhC,MAAM,UAAUkB,QAV/C,WACEW,GAAQ,KASN,yBAGA,kBAACpB,EAAA,EAAD,CACEmB,KAAMA,EACNmB,oBAAqBN,EACrBO,aAAW,EACX5C,QAAS+B,EACTzB,kBAAgB,2BAChB0B,mBAAiB,kCAEjB,kBAACzB,EAAA,EAAD,CAAaC,GAAG,4BACb,kCAEH,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmB1B,GAAG,kCAAtB,kIAKF,kBAAC2B,EAAA,EAAD,KACE,kBAACN,EAAA,EAAD,CAAQf,QAASiB,EAAanC,MAAM,WAApC,YAGA,kBAACiC,EAAA,EAAD,CAAQf,QAASiB,EAAanC,MAAM,WAApC,Y,aCzCK,SAASiD,IAAc,MAAD,EACXvB,IAAMC,UAAS,GADJ,mBAC5BC,EAD4B,KACtBC,EADsB,KAOnC,SAASM,IACPN,GAAQ,GAGV,OACE,6BACE,kBAACI,EAAA,EAAD,CAAQD,QAAQ,WAAWhC,MAAM,UAAUkB,QAV/C,WACEW,GAAQ,KASN,oBAGA,kBAACpB,EAAA,EAAD,CACEmB,KAAMA,EACNxB,QAAS+B,EACTzB,kBAAgB,qBAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,qBAAhB,aACA,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,+GAIA,kBAACY,EAAA,EAAD,CACEV,WAAS,EACTW,OAAO,QACPvC,GAAG,OACHwC,MAAM,gBACNC,KAAK,QACLC,WAAS,KAGb,kBAACf,EAAA,EAAD,KACE,kBAACN,EAAA,EAAD,CAAQD,QAAQ,WAAWhC,MAAM,YAAYkB,QAASiB,GAAtD,UAGA,kBAACF,EAAA,EAAD,CAAQf,QAASiB,EAAanC,MAAM,WAApC,gB,wCCtCV,MAaMW,EAAc4C,YAbLC,IAAK,CAClBC,KAAM,CACJN,OAAQ,EACRO,QAASF,EAAMG,QAAQ,IAEzBC,YAAa,CACXC,SAAU,WACVC,MAAON,EAAMG,QAAQ,GACrBI,IAAKP,EAAMG,QAAQ,GACnB3D,MAAOwD,EAAMQ,QAAQC,KAAK,QAIVV,CAAmBrD,IAAU,MACvCgE,EAA+BhE,EAA/BgE,SAAU/D,EAAqBD,EAArBC,QAASC,EAAYF,EAAZE,QAC3B,OACE,kBAAC,IAAD,CAAgB+D,mBAAiB,EAAC7C,UAAWnB,EAAQsD,MACnD,kBAAC1B,EAAA,EAAD,CAAYC,QAAQ,MAAMkC,GACzB9D,EACC,kBAACgE,EAAA,EAAD,CACEC,aAAW,QACX/C,UAAWnB,EAAQyD,YACnB1C,QAASd,GAET,kBAAC,IAAD,OAEA,QAKJiC,EAAgBkB,YAAWC,IAAK,CACpCC,KAAM,CACJC,QAASF,EAAMG,QAAQ,MAFLJ,CAIlBe,KAEE/B,EAAgBgB,YAAWC,IAAK,CACpCC,KAAM,CACJN,OAAQ,EACRO,QAASF,EAAMG,QAAQ,MAHLJ,CAKlBgB,KAEJ,MAAMC,UAA0B9C,IAAM+C,UAAW,eAAD,oBAC9CC,MAAQ,CACN9C,MAAM,GAFsC,KAK9C+C,gBAAkB,KAChBC,KAAKC,SAAS,CACZjD,MAAM,KAPoC,KAW9CO,YAAc,KACZyC,KAAKC,SAAS,CAAEjD,MAAM,KAGxBkD,SACE,OACE,6BACE,kBAAC7C,EAAA,EAAD,CACED,QAAQ,WACRhC,MAAM,YACNkB,QAAS0D,KAAKD,iBAHhB,eAOA,kBAAClE,EAAA,EAAD,CACEL,QAASwE,KAAKzC,YACdzB,kBAAgB,0BAChBkB,KAAMgD,KAAKF,MAAM9C,MAEjB,kBAAC,EAAD,CAAahB,GAAG,0BAA0BR,QAASwE,KAAKzC,aAAxD,eAGA,kBAAC,EAAD,CAAe4C,UAAQ,GACrB,kBAAChD,EAAA,EAAD,CAAYiD,cAAY,GAAxB,gLAKA,kBAACjD,EAAA,EAAD,CAAYiD,cAAY,GAAxB,8IAKA,kBAACjD,EAAA,EAAD,CAAYiD,cAAY,GAAxB,+LAMF,kBAAC,EAAD,KACE,kBAAC/C,EAAA,EAAD,CAAQf,QAAS0D,KAAKzC,YAAanC,MAAM,WAAzC,oBAUGwE,Q,8BCrGf,MAAM7E,EAAYC,YAAW4D,IAAK,CAChCyB,OAAQ,CACNpB,SAAU,YAEZqB,MAAO,CACLC,WAAY3B,EAAMG,QAAQ,GAC1ByB,KAAM,MAIJ3C,EAAaf,IAAMgB,YAAW,SAAoBxC,EAAOyC,GAC7D,OAAO,kBAACC,EAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASzC,OAG9B,SAASmF,IACtB,MAAMlF,EAAUR,IADyB,EAEjB+B,IAAMC,UAAS,GAFE,mBAElCC,EAFkC,KAE5BC,EAF4B,KAQzC,SAASM,IACPN,GAAQ,GAGV,OACE,6BACE,kBAACI,EAAA,EAAD,CAAQD,QAAQ,WAAWhC,MAAM,UAAUkB,QAV/C,WACEW,GAAQ,KASN,2BAGA,kBAACpB,EAAA,EAAD,CACE6E,YAAU,EACV1D,KAAMA,EACNxB,QAAS+B,EACTY,oBAAqBN,GAErB,kBAAC8C,EAAA,EAAD,CAAQjE,UAAWnB,EAAQ8E,QACzB,kBAACO,EAAA,EAAD,KACE,kBAACpB,EAAA,EAAD,CACEqB,KAAK,QACLzF,MAAM,UACNkB,QAASiB,EACTkC,aAAW,SAEX,kBAAC,IAAD,OAEF,kBAACtC,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWnB,EAAQ+E,OAA5C,SAGA,kBAACjD,EAAA,EAAD,CAAQjC,MAAM,UAAUkB,QAASiB,GAAjC,UAKJ,kBAACtB,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACM,EAAA,EAAD,CAAcC,QAAQ,iBAAiBkE,UAAU,aAEnD,kBAACC,EAAA,EAAD,MACA,kBAAC3E,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACM,EAAA,EAAD,CACEC,QAAQ,gCACRkE,UAAU,e,mEC/DxB,MAAM/F,GAAYC,YAAW4D,IAAK,CAChCoC,KAAM,CACJC,QAAS,OACTC,cAAe,SACf3C,OAAQ,OACR4C,MAAO,eAETC,YAAa,CACXC,UAAWzC,EAAMG,QAAQ,GACzBuC,SAAU,KAEZC,iBAAkB,CAChBF,UAAWzC,EAAMG,QAAQ,OAId,SAASyC,KACtB,MAAMjG,EAAUR,KADuB,EAEf+B,IAAMC,UAAS,GAFA,mBAEhCC,EAFgC,KAE1BC,EAF0B,OAGLH,IAAMC,UAAS,GAHV,mBAGhC2B,EAHgC,KAGrB+C,EAHqB,OAIP3E,IAAMC,SAAS,MAJR,mBAIhC2E,EAJgC,KAItBC,EAJsB,KAUvC,SAASpE,IACPN,GAAQ,GAWV,OACE,kBAAC,IAAM2E,SAAP,KACE,kBAACvE,EAAA,EAAD,CAAQD,QAAQ,WAAWhC,MAAM,UAAUkB,QAlB/C,WACEW,GAAQ,KAiBN,yBAGA,kBAACpB,EAAA,EAAD,CACE6C,UAAWA,EACXgD,SAAUA,EACV1E,KAAMA,EACNxB,QAAS+B,EACTzB,kBAAgB,0BAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,0BAAhB,kBACA,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,kEAGA,0BAAMhB,UAAWnB,EAAQyF,KAAMa,YAAU,GACvC,kBAACC,EAAA,EAAD,CAAapF,UAAWnB,EAAQ6F,aAC9B,kBAACW,EAAA,EAAD,CAAYC,QAAQ,aAApB,YACA,kBAACC,GAAA,EAAD,CACErG,MAAO8F,EACPQ,SA9Bd,SAA8BC,GAC5BR,EAAYQ,EAAMC,OAAOxG,QA8BbyG,WAAY,CACVC,KAAM,YACNtG,GAAI,cAGN,kBAACuG,GAAA,EAAD,CAAU3G,OAAO,GAAjB,SACA,kBAAC2G,GAAA,EAAD,CAAU3G,MAAM,MAAhB,MACA,kBAAC2G,GAAA,EAAD,CAAU3G,MAAM,MAAhB,MACA,kBAAC2G,GAAA,EAAD,CAAU3G,MAAM,MAAhB,MACA,kBAAC2G,GAAA,EAAD,CAAU3G,MAAM,MAAhB,MACA,kBAAC2G,GAAA,EAAD,CAAU3G,MAAM,MAAhB,QAGJ,kBAAC4G,EAAA,EAAD,CACE9F,UAAWnB,EAAQgG,iBACnBkB,QACE,kBAACC,GAAA,EAAD,CACEC,QAASjE,EACTwD,SA7ChB,SAA+BC,GAC7BV,EAAaU,EAAMC,OAAOO,UA6CZ/G,MAAM,cAGV4C,MAAM,iBAIZ,kBAACb,EAAA,EAAD,KACE,kBAACN,EAAA,EAAD,CAAQf,QAASiB,EAAanC,MAAM,WAApC,Y,wBC7FK,SAASwH,KAAoB,MAAD,EACjB9F,IAAMC,UAAS,GADE,mBAClCC,EADkC,KAC5BC,EAD4B,KAEnC2B,EAAQiE,eACRnC,EAAaoC,aAAclE,EAAMmE,YAAYC,KAAK,OAMxD,SAASzF,IACPN,GAAQ,GAGV,OACE,6BACE,kBAACI,EAAA,EAAD,CAAQD,QAAQ,WAAWhC,MAAM,UAAUkB,QAV/C,WACEW,GAAQ,KASN,0BAGA,kBAACpB,EAAA,EAAD,CACE6E,WAAYA,EACZ1D,KAAMA,EACNxB,QAAS+B,EACTzB,kBAAgB,2BAEhB,kBAACC,EAAA,EAAD,CAAaC,GAAG,2BACb,kCAEH,kBAACyB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,uIAKF,kBAACC,EAAA,EAAD,KACE,kBAACN,EAAA,EAAD,CAAQf,QAASiB,EAAanC,MAAM,WAApC,YAGA,kBAACiC,EAAA,EAAD,CAAQf,QAASiB,EAAanC,MAAM,UAAUwC,WAAS,GAAvD,Y,0BChCV,MAAMqF,GAAU,CACd,OACA,QACA,WACA,QACA,WACA,gBACA,OACA,SACA,SACA,QACA,QACA,UACA,SACA,WAGF,SAASC,GAAsB5H,GAAQ,MAC7BE,EAA8CF,EAA9CE,QAAgB2H,EAA8B7H,EAArCM,MAAkBoB,EAAmB1B,EAAnB0B,KAAStB,EADR,YACkBJ,EADlB,8BAEVwB,IAAMC,SAASoG,GAFL,mBAE7BvH,EAF6B,KAEtBwH,EAFsB,KAG9BC,EAAgBvG,IAAMwG,OAAO,MA0BnC,OAxBAxG,IAAMyG,UAAU,KACTvG,GACHoG,EAASD,IAEV,CAACA,EAAWnG,IAqBb,kBAACnB,EAAA,EAAD,eACE2H,sBAAoB,EACpBC,sBAAoB,EACpB/B,SAAS,KACTgC,WAvBJ,WAC+B,MAAzBL,EAAcM,SAChBN,EAAcM,QAAQC,SAsBtB9H,kBAAgB,4BAChBkB,KAAMA,GACFtB,GAEJ,kBAACK,EAAA,EAAD,CAAaC,GAAG,6BAAhB,kBACA,kBAACyB,EAAA,EAAD,CAAe0C,UAAQ,GACrB,kBAAC0D,GAAA,EAAD,CACE9F,IAAKsF,EACL5D,aAAW,WACX6C,KAAK,WACL1G,MAAOA,EACPsG,SArBR,SAAsBC,EAAO2B,GAC3BV,EAASU,KAsBFb,GAAQ/G,IAAI6H,GACX,kBAACvB,EAAA,EAAD,CACE5G,MAAOmI,EACPxH,IAAKwH,EACLtB,QAAS,kBAACuB,GAAA,EAAD,MACTxF,MAAOuF,OAKf,kBAACpG,EAAA,EAAD,KACE,kBAACN,EAAA,EAAD,CAAQD,QAAQ,WAAWhC,MAAM,YAAYkB,QA1CnD,WACEd,MAyCI,UAGA,kBAAC6B,EAAA,EAAD,CAAQf,QAzCd,WACEd,EAAQI,IAwCuBR,MAAM,WAAjC,QAcR,MAAML,GAAYC,YAAW4D,IAAK,CAChCC,KAAM,CACJsC,MAAO,OACPO,SAAU,IACVxG,gBAAiB0D,EAAMQ,QAAQ6E,WAAWC,OAE5CA,MAAO,CACL/C,MAAO,MACPgD,UAAW,QAIA,SAASC,KACtB,MAAM7I,EAAUR,KAD2B,EAEnB+B,IAAMC,UAAS,GAFI,mBAEpCC,EAFoC,KAE9BC,EAF8B,OAGjBH,IAAMC,SAAS,SAHE,mBAGpCnB,EAHoC,KAG7BwH,EAH6B,KAiB3C,OACE,yBAAK1G,UAAWnB,EAAQsD,MACtB,kBAAC5C,EAAA,EAAD,CAAMoI,UAAU,MAAMC,KAAK,QACzB,kBAAClI,EAAA,EAAD,CAAUC,QAAM,EAACkI,SAAO,EAACC,UAAQ,EAACF,KAAK,YACrC,kBAAC3H,EAAA,EAAD,CAAcC,QAAQ,mBAExB,kBAACR,EAAA,EAAD,CACEC,QAAM,EACNkI,SAAO,EACPE,gBAAc,OACdC,gBAAc,gBACdjF,aAAW,iBACXnD,QAxBR,WACEW,GAAQ,IAwBFqH,KAAK,YAEL,kBAAC3H,EAAA,EAAD,CAAcC,QAAQ,iBAAiBkE,UAAWlF,KAEpD,kBAACQ,EAAA,EAAD,CAAUC,QAAM,EAACkI,SAAO,EAACC,UAAQ,EAACF,KAAK,YACrC,kBAAC3H,EAAA,EAAD,CACEC,QAAQ,gCACRkE,UAAU,YAGd,kBAACoC,GAAD,CACE3H,QAAS,CACP2I,MAAO3I,EAAQ2I,OAEjBlI,GAAG,gBACHoC,aAAW,EACXpB,KAAMA,EACNxB,QAtCR,SAAqBsI,GACnB7G,GAAQ,GAEJ6G,GACFV,EAASU,IAmCLlI,MAAOA,MC1GF+I,UAlDG,IAEd,yBAAKjI,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEkI,cAAe,CACb,CAAEtC,KAAM,WAAYuC,KAAM,aAC1B,CAAEvC,KAAM,cAId,kBAAC,IAAD,CAAYhC,MAAM,iBAChB,kBAACzD,EAAD,OAEF,yBAAKH,UAAU,SACf,kBAAC,IAAD,CAAY4D,MAAM,gBAChB,kBAAChD,EAAD,OAEF,yBAAKZ,UAAU,SACf,kBAAC,IAAD,CAAY4D,MAAM,cAChB,kBAACpC,EAAD,OAEF,yBAAKxB,UAAU,SACf,kBAAC,IAAD,CAAY4D,MAAM,eAChB,kBAACjC,EAAD,OAEF,yBAAK3B,UAAU,SACf,kBAAC,IAAD,CAAY4D,MAAM,qBAChB,kBAACwE,EAAD,OAEF,yBAAKpI,UAAU,SACf,kBAAC,IAAD,CAAY4D,MAAM,sBAChB,kBAACG,EAAD,OAEF,yBAAK/D,UAAU,SACf,kBAAC,IAAD,CAAY4D,MAAM,yBAChB,kBAACkB,GAAD,OAEF,yBAAK9E,UAAU,SACf,kBAAC,IAAD,CAAY4D,MAAM,qBAChB,kBAACsC,GAAD,OAEF,yBAAKlG,UAAU,SACf,kBAAC,IAAD,CAAY4D,MAAM,uBAChB,kBAAC8D,GAAD","file":"static/js/39.e6a809ab.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\n\r\nconst emails = [\"username@gmail.com\", \"user02@gmail.com\"];\r\nconst useStyles = makeStyles({\r\n  avatar: {\r\n    backgroundColor: blue[100],\r\n    color: blue[600]\r\n  }\r\n});\r\n\r\nfunction SimpleDialog(props) {\r\n  const classes = useStyles();\r\n  const { onClose, selectedValue, ...other } = props;\r\n\r\n  function handleClose() {\r\n    onClose(selectedValue);\r\n  }\r\n\r\n  function handleListItemClick(value) {\r\n    onClose(value);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      onClose={handleClose}\r\n      aria-labelledby=\"simple-dialog-title\"\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\r\n      <List>\r\n        {emails.map(email => (\r\n          <ListItem\r\n            button\r\n            onClick={() => handleListItemClick(email)}\r\n            key={email}\r\n          >\r\n            <ListItemAvatar>\r\n              <Avatar className={classes.avatar}>\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary={email} />\r\n          </ListItem>\r\n        ))}\r\n\r\n        <ListItem button onClick={() => handleListItemClick(\"addAccount\")}>\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"add account\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nSimpleDialog.propTypes = {\r\n  onClose: PropTypes.func,\r\n  open: PropTypes.bool,\r\n  selectedValue: PropTypes.string\r\n};\r\n\r\nexport default function SimpleDialogDemo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  const handleClose = value => {\r\n    setOpen(false);\r\n    setSelectedValue(value);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Typography variant=\"subtitle1\">Selected: {selectedValue}</Typography>\r\n      <br />\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open simple dialog\r\n      </Button>\r\n      <SimpleDialog\r\n        selectedValue={selectedValue}\r\n        open={open}\r\n        onClose={handleClose}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function AlertDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Slide in alert dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        TransitionComponent={Transition}\r\n        keepMounted\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-slide-title\"\r\n        aria-describedby=\"alert-dialog-slide-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-slide-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-slide-description\">\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open form dialog\r\n      </Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"form-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To subscribe to this website, please enter your email address here.\r\n            We will send updates occasionally.\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"Email Address\"\r\n            type=\"email\"\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"outlined\" color=\"secondary\" onClick={handleClose}>\r\n            Cancel\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Subscribe\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport MuiDialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport MuiDialogContent from \"@material-ui/core/DialogContent\";\r\nimport MuiDialogActions from \"@material-ui/core/DialogActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(2)\r\n  },\r\n  closeButton: {\r\n    position: \"absolute\",\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500]\r\n  }\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)(props => {\r\n  const { children, classes, onClose } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton\r\n          aria-label=\"Close\"\r\n          className={classes.closeButton}\r\n          onClick={onClose}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(2)\r\n  }\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles(theme => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1)\r\n  }\r\n}))(MuiDialogActions);\r\n\r\nclass CustomizedDialogs extends React.Component {\r\n  state = {\r\n    open: false\r\n  };\r\n\r\n  handleClickOpen = () => {\r\n    this.setState({\r\n      open: true\r\n    });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          variant=\"outlined\"\r\n          color=\"secondary\"\r\n          onClick={this.handleClickOpen}\r\n        >\r\n          Open dialog\r\n        </Button>\r\n        <Dialog\r\n          onClose={this.handleClose}\r\n          aria-labelledby=\"customized-dialog-title\"\r\n          open={this.state.open}\r\n        >\r\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\r\n            Modal title\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            <Typography gutterBottom>\r\n              Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n              dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta\r\n              ac consectetur ac, vestibulum at eros.\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n              Praesent commodo cursus magna, vel scelerisque nisl consectetur\r\n              et. Vivamus sagittis lacus vel augue laoreet rutrum faucibus dolor\r\n              auctor.\r\n            </Typography>\r\n            <Typography gutterBottom>\r\n              Aenean lacinia bibendum nulla sed consectetur. Praesent commodo\r\n              cursus magna, vel scelerisque nisl consectetur et. Donec sed odio\r\n              dui. Donec ullamcorper nulla non metus auctor fringilla.\r\n            </Typography>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={this.handleClose} color=\"primary\">\r\n              Save changes\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CustomizedDialogs;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Slide from \"@material-ui/core/Slide\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  appBar: {\r\n    position: \"relative\"\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1\r\n  }\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function FullScreenDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open full-screen dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={open}\r\n        onClose={handleClose}\r\n        TransitionComponent={Transition}\r\n      >\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              onClick={handleClose}\r\n              aria-label=\"Close\"\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sound\r\n            </Typography>\r\n            <Button color=\"inherit\" onClick={handleClose}>\r\n              save\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Phone ringtone\" secondary=\"Titania\" />\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem button>\r\n            <ListItemText\r\n              primary=\"Default notification ringtone\"\r\n              secondary=\"Tethys\"\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    margin: \"auto\",\r\n    width: \"fit-content\"\r\n  },\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 120\r\n  },\r\n  formControlLabel: {\r\n    marginTop: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nexport default function MaxWidthDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [fullWidth, setFullWidth] = React.useState(true);\r\n  const [maxWidth, setMaxWidth] = React.useState(\"sm\");\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  function handleMaxWidthChange(event) {\r\n    setMaxWidth(event.target.value);\r\n  }\r\n\r\n  function handleFullWidthChange(event) {\r\n    setFullWidth(event.target.checked);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open max-width dialog\r\n      </Button>\r\n      <Dialog\r\n        fullWidth={fullWidth}\r\n        maxWidth={maxWidth}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"max-width-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"max-width-dialog-title\">Optional sizes</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            You can set my maximum width and whether to adapt or not.\r\n          </DialogContentText>\r\n          <form className={classes.form} noValidate>\r\n            <FormControl className={classes.formControl}>\r\n              <InputLabel htmlFor=\"max-width\">maxWidth</InputLabel>\r\n              <Select\r\n                value={maxWidth}\r\n                onChange={handleMaxWidthChange}\r\n                inputProps={{\r\n                  name: \"max-width\",\r\n                  id: \"max-width\"\r\n                }}\r\n              >\r\n                <MenuItem value={false}>false</MenuItem>\r\n                <MenuItem value=\"xs\">xs</MenuItem>\r\n                <MenuItem value=\"sm\">sm</MenuItem>\r\n                <MenuItem value=\"md\">md</MenuItem>\r\n                <MenuItem value=\"lg\">lg</MenuItem>\r\n                <MenuItem value=\"xl\">xl</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <FormControlLabel\r\n              className={classes.formControlLabel}\r\n              control={\r\n                <Switch\r\n                  checked={fullWidth}\r\n                  onChange={handleFullWidthChange}\r\n                  value=\"fullWidth\"\r\n                />\r\n              }\r\n              label=\"Full width\"\r\n            />\r\n          </form>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Close\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\r\nimport { useTheme } from \"@material-ui/core/styles\";\r\n\r\nexport default function ResponsiveDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\r\n\r\n  function handleClickOpen() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose() {\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n        Open responsive dialog\r\n      </Button>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"responsive-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"responsive-dialog-title\">\r\n          {\"Use Google's location service?\"}\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            Let Google help apps determine location. This means sending\r\n            anonymous location data to Google, even when no apps are running.\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Disagree\r\n          </Button>\r\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n            Agree\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport Radio from \"@material-ui/core/Radio\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\n\r\nconst options = [\r\n  \"None\",\r\n  \"Atria\",\r\n  \"Callisto\",\r\n  \"Dione\",\r\n  \"Ganymede\",\r\n  \"Hangouts Call\",\r\n  \"Luna\",\r\n  \"Oberon\",\r\n  \"Phobos\",\r\n  \"Pyxis\",\r\n  \"Sedna\",\r\n  \"Titania\",\r\n  \"Triton\",\r\n  \"Umbriel\"\r\n];\r\n\r\nfunction ConfirmationDialogRaw(props) {\r\n  const { onClose, value: valueProp, open, ...other } = props;\r\n  const [value, setValue] = React.useState(valueProp);\r\n  const radioGroupRef = React.useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (!open) {\r\n      setValue(valueProp);\r\n    }\r\n  }, [valueProp, open]);\r\n\r\n  function handleEntering() {\r\n    if (radioGroupRef.current != null) {\r\n      radioGroupRef.current.focus();\r\n    }\r\n  }\r\n\r\n  function handleCancel() {\r\n    onClose();\r\n  }\r\n\r\n  function handleOk() {\r\n    onClose(value);\r\n  }\r\n\r\n  function handleChange(event, newValue) {\r\n    setValue(newValue);\r\n  }\r\n\r\n  return (\r\n    <Dialog\r\n      disableBackdropClick\r\n      disableEscapeKeyDown\r\n      maxWidth=\"xs\"\r\n      onEntering={handleEntering}\r\n      aria-labelledby=\"confirmation-dialog-title\"\r\n      open={open}\r\n      {...other}\r\n    >\r\n      <DialogTitle id=\"confirmation-dialog-title\">Phone Ringtone</DialogTitle>\r\n      <DialogContent dividers>\r\n        <RadioGroup\r\n          ref={radioGroupRef}\r\n          aria-label=\"Ringtone\"\r\n          name=\"ringtone\"\r\n          value={value}\r\n          onChange={handleChange}\r\n        >\r\n          {options.map(option => (\r\n            <FormControlLabel\r\n              value={option}\r\n              key={option}\r\n              control={<Radio />}\r\n              label={option}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      </DialogContent>\r\n      <DialogActions>\r\n        <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel}>\r\n          Cancel\r\n        </Button>\r\n        <Button onClick={handleOk} color=\"primary\">\r\n          Ok\r\n        </Button>\r\n      </DialogActions>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nConfirmationDialogRaw.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  open: PropTypes.bool.isRequired,\r\n  value: PropTypes.string.isRequired\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper\r\n  },\r\n  paper: {\r\n    width: \"80%\",\r\n    maxHeight: 435\r\n  }\r\n}));\r\n\r\nexport default function ConfirmationDialog() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [value, setValue] = React.useState(\"Dione\");\r\n\r\n  function handleClickListItem() {\r\n    setOpen(true);\r\n  }\r\n\r\n  function handleClose(newValue) {\r\n    setOpen(false);\r\n\r\n    if (newValue) {\r\n      setValue(newValue);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component=\"div\" role=\"list\">\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText primary=\"Interruptions\" />\r\n        </ListItem>\r\n        <ListItem\r\n          button\r\n          divider\r\n          aria-haspopup=\"true\"\r\n          aria-controls=\"ringtone-menu\"\r\n          aria-label=\"Phone ringtone\"\r\n          onClick={handleClickListItem}\r\n          role=\"listitem\"\r\n        >\r\n          <ListItemText primary=\"Phone ringtone\" secondary={value} />\r\n        </ListItem>\r\n        <ListItem button divider disabled role=\"listitem\">\r\n          <ListItemText\r\n            primary=\"Default notification ringtone\"\r\n            secondary=\"Tethys\"\r\n          />\r\n        </ListItem>\r\n        <ConfirmationDialogRaw\r\n          classes={{\r\n            paper: classes.paper\r\n          }}\r\n          id=\"ringtone-menu\"\r\n          keepMounted\r\n          open={open}\r\n          onClose={handleClose}\r\n          value={value}\r\n        />\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Breadcrumb, SimpleCard } from \"matx\";\r\nimport SimpleDialogDemo from \"./SimpleDialog\";\r\nimport AlertDialog from \"./SimpleAlerts\";\r\nimport AlertDialogSlide from \"./DialogTransition\";\r\nimport FormDialog from \"./FormDialog\";\r\nimport CustomizedDialogs from \"./CustomizedDialog\";\r\nimport FullScreenDialog from \"./FullScreenDialog\";\r\nimport MaxWidthDialog from \"./OptimalSizeDialog\";\r\nimport ResponsiveDialog from \"./ResponsiveDialog\";\r\nimport ConfirmationDialog from \"./ConfirmationDialog\";\r\n\r\nconst AppDialog = () => {\r\n  return (\r\n    <div className=\"m-sm-30\">\r\n      <div className=\"mb-sm-30\">\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: \"Material\", path: \"/material\" },\r\n            { name: \"Dialog\" }\r\n          ]}\r\n        />\r\n      </div>\r\n      <SimpleCard title=\"simple Dialog\">\r\n        <SimpleDialogDemo />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"alert dialog\">\r\n        <AlertDialog />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"transition\">\r\n        <AlertDialogSlide />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"form dialog\">\r\n        <FormDialog />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"customized dialog\">\r\n        <CustomizedDialogs />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"full-screen dialog\">\r\n        <FullScreenDialog />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"optimized size dialog\">\r\n        <MaxWidthDialog />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"responsive dialog\">\r\n        <ResponsiveDialog />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"confirmation dialog\">\r\n        <ConfirmationDialog />\r\n      </SimpleCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppDialog;\r\n"],"sourceRoot":""}