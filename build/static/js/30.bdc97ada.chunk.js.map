{"version":3,"sources":["../node_modules/@material-ui/core/esm/Switch/Switch.js","app/views/material-kit/switch/SijmpleSwitch.jsx","app/views/material-kit/switch/LabelledSwitch.jsx","app/views/material-kit/switch/FormGroupSwitch.jsx","../node_modules/@material-ui/core/esm/colors/purple.js","app/views/material-kit/switch/CustomizedSwitch.jsx","app/views/material-kit/switch/PlacingSwitchLabel.jsx","app/views/material-kit/switch/AppSwitch.jsx"],"names":["Switch","React","props","ref","classes","className","_props$color","color","_props$edge","edge","_props$size","size","other","_objectWithoutProperties","icon","thumb","clsx","root","edgeStart","edgeEnd","concat","capitalize","SwitchBase","_extends","type","checkedIcon","switchBase","input","checked","disabled","track","withStyles","theme","display","width","height","overflow","padding","boxSizing","position","flexShrink","zIndex","verticalAlign","colorAdjust","marginLeft","marginRight","top","left","palette","grey","transition","transitions","create","duration","shortest","transform","opacity","colorPrimary","primary","main","backgroundColor","fade","action","hoverOpacity","common","black","white","colorSecondary","secondary","sizeSmall","boxShadow","shadows","borderRadius","name","SimpleSwitch","useState","checkedA","checkedB","state","setState","handleChange","event","target","onChange","value","inputProps","defaultChecked","LabelledSwitch","FormGroup","row","FormControlLabel","control","label","FormGroupSwitch","gilad","jason","antoine","FormControl","component","FormLabel","FormHelperText","purple","50","100","200","300","400","500","600","700","800","900","A100","A200","A400","A700","PurpleSwitch","IOSSwitch","margin","spacing","border","focusVisible","focusVisibleClassName","disableRipple","AntSwitch","borderColor","CustomizedSwitch","checkedC","Typography","Grid","container","alignItems","item","PlacingSwitchLabel","setValue","aria-label","labelPlacement","AppSwitch","routeSegments","path","title"],"mappings":"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","file":"static/js/30.bdc97ada.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n// @inheritedComponent IconButton\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport capitalize from '../utils/capitalize';\nimport SwitchBase from '../internal/SwitchBase';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      width: 34 + 12 * 2,\n      height: 14 + 12 * 2,\n      overflow: 'hidden',\n      padding: 12,\n      boxSizing: 'border-box',\n      position: 'relative',\n      flexShrink: 0,\n      zIndex: 0,\n      // Reset the stacking context.\n      verticalAlign: 'middle',\n      // For correct alignment with the text.\n      '@media print': {\n        colorAdjust: 'exact'\n      }\n    },\n\n    /* Styles applied to the root element if `edge=\"start\"`. */\n    edgeStart: {\n      marginLeft: -8\n    },\n\n    /* Styles applied to the root element if `edge=\"end\"`. */\n    edgeEnd: {\n      marginRight: -8\n    },\n\n    /* Styles applied to the internal `SwitchBase` component's `root` class. */\n    switchBase: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      // Render above the focus ripple.\n      color: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[400],\n      transition: theme.transitions.create(['left', 'transform'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      '&$checked': {\n        transform: 'translateX(20px)'\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        opacity: 0.5\n      },\n      '&$disabled + $track': {\n        opacity: theme.palette.type === 'light' ? 0.12 : 0.1\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"primary\"`. */\n    colorPrimary: {\n      '&$checked': {\n        color: theme.palette.primary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.primary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the internal SwitchBase component's root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      '&$checked': {\n        color: theme.palette.secondary.main,\n        '&:hover': {\n          backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n          '@media (hover: none)': {\n            backgroundColor: 'transparent'\n          }\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[800]\n      },\n      '&$checked + $track': {\n        backgroundColor: theme.palette.secondary.main\n      },\n      '&$disabled + $track': {\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white\n      }\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      width: 40,\n      height: 24,\n      padding: 7,\n      '& $thumb': {\n        width: 16,\n        height: 16\n      },\n      '& $switchBase': {\n        padding: 4,\n        '&$checked': {\n          transform: 'translateX(16px)'\n        }\n      }\n    },\n\n    /* Pseudo-class applied to the internal `SwitchBase` component's `checked` class. */\n    checked: {},\n\n    /* Pseudo-class applied to the internal SwitchBase component's disabled class. */\n    disabled: {},\n\n    /* Styles applied to the internal SwitchBase component's input element. */\n    input: {\n      left: '-100%',\n      width: '300%'\n    },\n\n    /* Styles used to create the thumb passed to the internal `SwitchBase` component `icon` prop. */\n    thumb: {\n      boxShadow: theme.shadows[1],\n      backgroundColor: 'currentColor',\n      width: 20,\n      height: 20,\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the track element. */\n    track: {\n      height: '100%',\n      width: '100%',\n      borderRadius: 14 / 2,\n      zIndex: -1,\n      transition: theme.transitions.create(['opacity', 'background-color'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.common.black : theme.palette.common.white,\n      opacity: theme.palette.type === 'light' ? 0.38 : 0.3\n    }\n  };\n};\nvar Switch = /*#__PURE__*/React.forwardRef(function Switch(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'secondary' : _props$color,\n      _props$edge = props.edge,\n      edge = _props$edge === void 0 ? false : _props$edge,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"edge\", \"size\"]);\n\n  var icon = /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.thumb\n  });\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: clsx(classes.root, className, {\n      'start': classes.edgeStart,\n      'end': classes.edgeEnd\n    }[edge], size === \"small\" && classes[\"size\".concat(capitalize(size))])\n  }, /*#__PURE__*/React.createElement(SwitchBase, _extends({\n    type: \"checkbox\",\n    icon: icon,\n    checkedIcon: icon,\n    classes: {\n      root: clsx(classes.switchBase, classes[\"color\".concat(capitalize(color))]),\n      input: classes.input,\n      checked: classes.checked,\n      disabled: classes.disabled\n    },\n    ref: ref\n  }, other)), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.track\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Switch.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * The icon to display when the component is checked.\n   */\n  checkedIcon: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n\n  /**\n   * @ignore\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the switch will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * If given, uses a negative margin to counteract the padding on one\n   * side (this is often helpful for aligning the left or right\n   * side of the icon with content above or below, without ruining the border\n   * size and shape).\n   */\n  edge: PropTypes.oneOf(['end', 'start', false]),\n\n  /**\n   * The icon to display when the component is unchecked.\n   */\n  icon: PropTypes.node,\n\n  /**\n   * The id of the `input` element.\n   */\n  id: PropTypes.string,\n\n  /**\n   * [Attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#Attributes) applied to the `input` element.\n   */\n  inputProps: PropTypes.object,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * If `true`, the `input` element will be required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the switch.\n   * `small` is equivalent to the dense switch styling.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The value of the component. The DOM API casts this to a string.\n   * The browser uses \"on\" as the default value.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSwitch'\n})(Switch);","import React from \"react\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default function SimpleSwitch() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Switch\r\n        checked={state.checkedA}\r\n        onChange={handleChange(\"checkedA\")}\r\n        value=\"checkedA\"\r\n        inputProps={{ \"aria-label\": \"secondary checkbox\" }}\r\n      />\r\n      <Switch\r\n        checked={state.checkedB}\r\n        onChange={handleChange(\"checkedB\")}\r\n        value=\"checkedB\"\r\n        color=\"primary\"\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n      <Switch\r\n        value=\"checkedC\"\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n      <Switch\r\n        disabled\r\n        value=\"checkedD\"\r\n        inputProps={{ \"aria-label\": \"disabled checkbox\" }}\r\n      />\r\n      <Switch\r\n        disabled\r\n        checked\r\n        value=\"checkedE\"\r\n        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n      />\r\n      <Switch\r\n        defaultChecked\r\n        value=\"checkedF\"\r\n        color=\"default\"\r\n        inputProps={{ \"aria-label\": \"checkbox with default color\" }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default function LabelledSwitch() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={state.checkedA}\r\n            onChange={handleChange(\"checkedA\")}\r\n            value=\"checkedA\"\r\n          />\r\n        }\r\n        label=\"Secondary\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Switch\r\n            checked={state.checkedB}\r\n            onChange={handleChange(\"checkedB\")}\r\n            value=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Primary\"\r\n      />\r\n      <FormControlLabel\r\n        control={<Switch value=\"checkedC\" />}\r\n        label=\"Uncontrolled\"\r\n      />\r\n      <FormControlLabel\r\n        disabled\r\n        control={<Switch value=\"checkedD\" />}\r\n        label=\"Disabled\"\r\n      />\r\n      <FormControlLabel\r\n        disabled\r\n        control={<Switch checked value=\"checkedE\" />}\r\n        label=\"Disabled\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\n\r\nexport default function FormGroupSwitch() {\r\n  const [state, setState] = React.useState({\r\n    gilad: true,\r\n    jason: false,\r\n    antoine: true\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">Assign responsibility</FormLabel>\r\n      <FormGroup>\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={state.gilad}\r\n              onChange={handleChange(\"gilad\")}\r\n              value=\"gilad\"\r\n            />\r\n          }\r\n          label=\"Gilad Gray\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={state.jason}\r\n              onChange={handleChange(\"jason\")}\r\n              value=\"jason\"\r\n            />\r\n          }\r\n          label=\"Jason Killian\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch\r\n              checked={state.antoine}\r\n              onChange={handleChange(\"antoine\")}\r\n              value=\"antoine\"\r\n            />\r\n          }\r\n          label=\"Antoine Llorca\"\r\n        />\r\n      </FormGroup>\r\n      <FormHelperText>Be careful</FormHelperText>\r\n    </FormControl>\r\n  );\r\n}\r\n","var purple = {\n  50: '#f3e5f5',\n  100: '#e1bee7',\n  200: '#ce93d8',\n  300: '#ba68c8',\n  400: '#ab47bc',\n  500: '#9c27b0',\n  600: '#8e24aa',\n  700: '#7b1fa2',\n  800: '#6a1b9a',\n  900: '#4a148c',\n  A100: '#ea80fc',\n  A200: '#e040fb',\n  A400: '#d500f9',\n  A700: '#aa00ff'\n};\nexport default purple;","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\nimport { purple } from \"@material-ui/core/colors\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst PurpleSwitch = withStyles({\r\n  switchBase: {\r\n    color: purple[300],\r\n    \"&$checked\": {\r\n      color: purple[500]\r\n    },\r\n    \"&$checked + $track\": {\r\n      backgroundColor: purple[500]\r\n    }\r\n  },\r\n  checked: {},\r\n  track: {}\r\n})(Switch);\r\n\r\nconst IOSSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 42,\r\n    height: 26,\r\n    padding: 0,\r\n    margin: theme.spacing(1)\r\n  },\r\n  switchBase: {\r\n    padding: 1,\r\n    \"&$checked\": {\r\n      transform: \"translateX(16px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        backgroundColor: \"#52d869\",\r\n        opacity: 1,\r\n        border: \"none\"\r\n      }\r\n    },\r\n    \"&$focusVisible $thumb\": {\r\n      color: \"#52d869\",\r\n      border: \"6px solid #fff\"\r\n    }\r\n  },\r\n  thumb: {\r\n    width: 24,\r\n    height: 24\r\n  },\r\n  track: {\r\n    borderRadius: 26 / 2,\r\n    border: `1px solid ${theme.palette.grey[400]}`,\r\n    backgroundColor: theme.palette.grey[50],\r\n    opacity: 1,\r\n    transition: theme.transitions.create([\"background-color\", \"border\"])\r\n  },\r\n  checked: {},\r\n  focusVisible: {}\r\n}))(({ classes, ...props }) => {\r\n  return (\r\n    <Switch\r\n      focusVisibleClassName={classes.focusVisible}\r\n      disableRipple\r\n      classes={{\r\n        root: classes.root,\r\n        switchBase: classes.switchBase,\r\n        thumb: classes.thumb,\r\n        track: classes.track,\r\n        checked: classes.checked\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n});\r\n\r\nconst AntSwitch = withStyles(theme => ({\r\n  root: {\r\n    width: 28,\r\n    height: 16,\r\n    padding: 0,\r\n    display: \"flex\"\r\n  },\r\n  switchBase: {\r\n    padding: 2,\r\n    color: theme.palette.grey[500],\r\n    \"&$checked\": {\r\n      transform: \"translateX(12px)\",\r\n      color: theme.palette.common.white,\r\n      \"& + $track\": {\r\n        opacity: 1,\r\n        backgroundColor: theme.palette.primary.main,\r\n        borderColor: theme.palette.primary.main\r\n      }\r\n    }\r\n  },\r\n  thumb: {\r\n    width: 12,\r\n    height: 12,\r\n    boxShadow: \"none\"\r\n  },\r\n  track: {\r\n    border: `1px solid ${theme.palette.grey[500]}`,\r\n    borderRadius: 16 / 2,\r\n    opacity: 1,\r\n    backgroundColor: theme.palette.common.white\r\n  },\r\n  checked: {}\r\n}))(Switch);\r\n\r\nexport default function CustomizedSwitch() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedC: true\r\n  });\r\n\r\n  const handleChange = name => event => {\r\n    setState({ ...state, [name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <FormControlLabel\r\n        control={\r\n          <PurpleSwitch\r\n            checked={state.checkedA}\r\n            onChange={handleChange(\"checkedA\")}\r\n            value=\"checkedA\"\r\n          />\r\n        }\r\n        label=\"Custom color\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <IOSSwitch\r\n            checked={state.checkedB}\r\n            onChange={handleChange(\"checkedB\")}\r\n            value=\"checkedB\"\r\n          />\r\n        }\r\n        label=\"iOS style\"\r\n      />\r\n      <Typography component=\"div\">\r\n        <Grid component=\"label\" container alignItems=\"center\" spacing={1}>\r\n          <Grid item>Off</Grid>\r\n          <Grid item>\r\n            <AntSwitch\r\n              checked={state.checkedC}\r\n              onChange={handleChange(\"checkedC\")}\r\n              value=\"checkedC\"\r\n            />\r\n          </Grid>\r\n          <Grid item>On</Grid>\r\n        </Grid>\r\n      </Typography>\r\n    </FormGroup>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\n\r\nfunction PlacingSwitchLabel() {\r\n  const [value, setValue] = React.useState(\"female\");\r\n\r\n  function handleChange(event) {\r\n    setValue(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\">\r\n      <FormLabel component=\"legend\">labelPlacement</FormLabel>\r\n      <FormGroup\r\n        aria-label=\"position\"\r\n        name=\"position\"\r\n        value={value}\r\n        onChange={handleChange}\r\n        row\r\n      >\r\n        <FormControlLabel\r\n          value=\"top\"\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"Top\"\r\n          labelPlacement=\"top\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"start\"\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"Start\"\r\n          labelPlacement=\"start\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"bottom\"\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"Bottom\"\r\n          labelPlacement=\"bottom\"\r\n        />\r\n        <FormControlLabel\r\n          value=\"end\"\r\n          control={<Switch color=\"primary\" />}\r\n          label=\"End\"\r\n          labelPlacement=\"end\"\r\n        />\r\n      </FormGroup>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default PlacingSwitchLabel;\r\n","import React from \"react\";\r\nimport SimpleSwitch from \"./SijmpleSwitch\";\r\nimport LabelledSwitch from \"./LabelledSwitch\";\r\nimport FormGroupSwitch from \"./FormGroupSwitch\";\r\nimport CustomizedSwitch from \"./CustomizedSwitch\";\r\nimport PlacingSwitchLabel from \"./PlacingSwitchLabel\";\r\nimport { Breadcrumb, SimpleCard } from \"matx\";\r\n\r\nconst AppSwitch = () => {\r\n  return (\r\n    <div className=\"m-sm-30\">\r\n      <div className=\"mb-sm-30\">\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: \"Material\", path: \"/material\" },\r\n            { name: \"Switch\" }\r\n          ]}\r\n        />\r\n      </div>\r\n      <SimpleCard title=\"Simple Switch\">\r\n        <SimpleSwitch />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"Switch with Label\">\r\n        <LabelledSwitch />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"Switch with Form Group\">\r\n        <FormGroupSwitch />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"Customized Switch\">\r\n        <CustomizedSwitch />\r\n      </SimpleCard>\r\n      <div className=\"py-3\" />\r\n      <SimpleCard title=\"Switch with Different Label Placement\">\r\n        <PlacingSwitchLabel />\r\n      </SimpleCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AppSwitch;\r\n"],"sourceRoot":""}