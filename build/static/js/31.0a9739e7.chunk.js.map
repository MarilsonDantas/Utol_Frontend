{"version":3,"sources":["app/views/utilities/Typography.jsx"],"names":["Typography","className","routeSegments","name","path","title","Array","keys","slice","reverse","map","item","index","key","ReactHtmlParser","description","ind","replace"],"mappings":"uIAAA,4HAuIeA,UA3HI,IAiDf,yBAAKC,UAAU,WACb,yBAAKA,UAAU,YACb,kBAAC,IAAD,CACEC,cAAe,CACb,CAAEC,KAAM,YAAaC,KAAM,cAC3B,CAAED,KAAM,kBAKd,kBAAC,IAAD,CAAYE,MAAM,cAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUJ,UAAU,cAClB,kBAAC,IAAD,CAAWA,UAAU,QAArB,cACA,kBAAC,IAAD,CAAWA,UAAU,QAArB,QACA,kBAAC,IAAD,CAAWA,UAAU,QAArB,aAGJ,kBAAC,IAAD,KACG,IAAIK,MAAM,GAAGC,QACXC,MAAM,GACNC,UACAC,IAAI,CAACC,EAAMC,IACV,kBAAC,IAAD,CAAUC,IAAKD,GACb,kBAAC,IAAD,CAAWX,UAAU,QAArB,IAA8BU,GAC9B,kBAAC,IAAD,CAAWV,UAAU,oBACrB,kBAAC,IAAD,CAAWA,UAAU,mBAClBa,IAAgB,KAAD,OAAMH,EAAN,aAAeA,EAAf,cAAyBA,EAAzB,SAIxB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWV,UAAU,QAArB,cACA,kBAAC,IAAD,CAAWA,UAAU,mBAArB,aACA,kBAAC,IAAD,CAAWA,UAAU,mBACnB,0BAAMA,UAAU,cAAhB,gBAIH,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IAAIS,IAAI,CAACC,EAAMC,IAC/C,kBAAC,IAAD,CAAUC,IAAKD,GACb,kBAAC,IAAD,CAAWX,UAAU,QAArB,QAAkCU,GAClC,kBAAC,IAAD,CAAWV,UAAU,mBAAmBU,EAAxC,MACA,kBAAC,IAAD,CAAWV,UAAU,mBAClBa,IAAgB,qBAAD,OACOH,EADP,kBACqBA,EADrB,iBAS1B,yBAAKV,UAAU,SAtGV,CACT,CACEA,UAAW,cACXc,YAAa,oBAEf,CACEd,UAAW,eACXc,YAAa,uBAEf,CACEd,UAAW,eACXc,YAAa,oBAEf,CACEd,UAAW,iBACXc,YAAa,oBAEf,CACEd,UAAW,aACXc,YAAa,oBAEf,CACEd,UAAW,cACXc,YAAa,qBAEf,CACEd,UAAW,aACXc,YAAa,oBAEf,CACEd,UAAW,aACXc,YAAa,oBAEf,CACEd,UAAW,kBACXc,YAAa,oBAEf,CACEd,UAAW,uBACXc,YAAa,yBAEf,CACEd,UAAW,sBACXc,YAAa,wBA4DLL,IAAI,CAACC,EAAMK,IACf,yBACEH,IAAKG,EACLf,UAAU,+CAEV,8BAAOU,EAAKV,WACZ,yBAAKA,UAAU,gBACb,kBAAC,IAAD,CAAWA,UAAU,QAArB,0BAAgDU,EAAKV,UAAUgB,QAC7D,IACA,IAFF,aAGMN,EAAKI,YAHX","file":"static/js/31.0a9739e7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactHtmlParser from \"react-html-parser\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableCell,\r\n  TableBody,\r\n  TableRow\r\n} from \"@material-ui/core\";\r\nimport { Breadcrumb, SimpleCard } from \"matx\";\r\nimport Highlight from \"react-highlight\";\r\n\r\nconst Typography = () => {\r\n  let list = [\r\n    {\r\n      className: \".font-light\",\r\n      description: \"font-weight: 300\"\r\n    },\r\n    {\r\n      className: \".font-normal\",\r\n      description: \"font-weight: normal\"\r\n    },\r\n    {\r\n      className: \".font-medium\",\r\n      description: \"font-weight: 500\"\r\n    },\r\n    {\r\n      className: \".font-semibold\",\r\n      description: \"font-weight: 600\"\r\n    },\r\n    {\r\n      className: \".font-bold\",\r\n      description: \"font-weight: 700\"\r\n    },\r\n    {\r\n      className: \".capitalize\",\r\n      description: \"Capitalize String\"\r\n    },\r\n    {\r\n      className: \".uppercase\",\r\n      description: \"UPPERCASE STRING\"\r\n    },\r\n    {\r\n      className: \".lowercase\",\r\n      description: \"lowercase string\"\r\n    },\r\n    {\r\n      className: \".whitespace-pre\",\r\n      description: \"white-space: pre\"\r\n    },\r\n    {\r\n      className: \".whitespace-pre-wrap\",\r\n      description: \"white-space: pre-wrap\"\r\n    },\r\n    {\r\n      className: \".whitespace-no-wrap\",\r\n      description: \"white-space: nowrap\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"m-sm-30\">\r\n      <div className=\"mb-sm-30\">\r\n        <Breadcrumb\r\n          routeSegments={[\r\n            { name: \"Utilities\", path: \"/utilities\" },\r\n            { name: \"Typography\" }\r\n          ]}\r\n        />\r\n      </div>\r\n\r\n      <SimpleCard title=\"typography\">\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow className=\"bg-default\">\r\n              <TableCell className=\"px-0\">Class Name</TableCell>\r\n              <TableCell className=\"px-0\">Size</TableCell>\r\n              <TableCell className=\"px-0\">Example</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {[...Array(7).keys()]\r\n              .slice(1)\r\n              .reverse()\r\n              .map((item, index) => (\r\n                <TableRow key={index}>\r\n                  <TableCell className=\"px-0\">h{item}</TableCell>\r\n                  <TableCell className=\"px-0 capitalize\"></TableCell>\r\n                  <TableCell className=\"px-0 capitalize\">\r\n                    {ReactHtmlParser(`<h${item}>h${item}</h${item}>`)}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            <TableRow>\r\n              <TableCell className=\"px-0\">text-small</TableCell>\r\n              <TableCell className=\"px-0 capitalize\">0.8125rem</TableCell>\r\n              <TableCell className=\"px-0 capitalize\">\r\n                <span className=\"text-small\">text-small</span>\r\n              </TableCell>\r\n            </TableRow>\r\n\r\n            {[13, 14, 16, 18, 20, 22, 24, 30, 32].map((item, index) => (\r\n              <TableRow key={index}>\r\n                <TableCell className=\"px-0\">text-{item}</TableCell>\r\n                <TableCell className=\"px-0 capitalize\">{item}px</TableCell>\r\n                <TableCell className=\"px-0 capitalize\">\r\n                  {ReactHtmlParser(\r\n                    `<span class=\"text-${item}\">text-${item}</span>`\r\n                  )}\r\n                </TableCell>\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <div className=\"py-2\"></div>\r\n        {list.map((item, ind) => (\r\n          <div\r\n            key={ind}\r\n            className=\"flex items-center flex-wrap justify-between\"\r\n          >\r\n            <code>{item.className}</code>\r\n            <div className=\"highlight-js\">\r\n              <Highlight className=\"html\">{`<div className=\"${item.className.replace(\r\n                \".\",\r\n                \"\"\r\n              )}\">${item.description}</div>`}</Highlight>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </SimpleCard>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Typography;\r\n"],"sourceRoot":""}