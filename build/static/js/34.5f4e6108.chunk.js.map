{"version":3,"sources":["app/MatxLayout/SharedCompoents/NotificationBar.jsx","app/MatxLayout/SharedCompoents/ShoppingCart.jsx","app/MatxLayout/Layout1/Layout1Topbar.jsx","app/MatxLayout/SharedCompoents/Sidenav.jsx","app/MatxLayout/SharedCompoents/Brand.jsx","app/MatxLayout/MatxTheme/SidenavTheme/SidenavThemeStyles.jsx","app/MatxLayout/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/MatxLayout/Layout1/Layout1Sidenav.jsx","app/MatxLayout/SharedCompoents/Footer.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebarToggle.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/BadgeSelected.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/customizerOptions.js","app/MatxLayout/SharedCompoents/MatxCustomizer/Layout1Customizer.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/Layout2Customizer.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/MatxCustomizer.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebarContent.jsx","app/MatxLayout/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebar.jsx","app/MatxLayout/Layout1/Layout1.jsx"],"names":["withStyles","withTheme","connect","state","getNotification","PropTypes","func","isRequired","deleteNotification","deleteAllNotification","notification","settings","layout","props","container","theme","notifcationList","React","useState","panelOpen","setPanelOpen","handleDrawerToggle","parentThemePalette","palette","ThemeProvider","themes","activeTheme","IconButton","onClick","style","color","type","text","secondary","primary","Badge","badgeContent","Icon","Drawer","width","variant","anchor","open","onClose","ModalProps","keepMounted","className","map","key","id","size","fontSize","to","path","Card","elevation","icon","name","heading","getTimeDifference","Date","timestamp","title","subtitle","Button","cartListLoaded","getCartList","deleteProductFromCart","updateCartAmount","cartList","ecommerce","user","userId","length","product","amount","disabled","src","imgUrl","alt","price","Layout1Topbar","Component","updateSidebarMode","sidebarSettings","this","setLayoutSettings","layout1Settings","leftSidebar","handleSidebarToggle","mode","isMdScreen","handleSignOut","logoutUser","render","classes","fixed","topbar","classList","menuButton","MenuItem","menuItem","backgroundColor","main","height","boxShadow","shadows","display","alignItems","minWidth","withRouter","options","suppressScrollX","children","navigation","navigations","activeLayoutSettingsName","activeLayout","activeLayoutSettings","Brand","root","background","default","opacity","SidenavTheme","IconButtonWhite","padding","IconSmall","Layout1Sidenav","hidden","setDefaultSettings","updatedSettings","merge","handleSidenavToggle","console","log","renderLogoSwitch","Switch","onChange","checked","renderUser","nmusuario","Tooltip","aria-label","componentDidMount","unlistenRouteChange","history","listen","location","action","setTimeout","setState","componentWillUnmount","sidenavTheme","backgroundImage","bgImgURL","Footer","footer","propTypes","object","toggle","position","right","bottom","zIndex","transition","isMobile","useMediaQuery","secondarySidebar","useEffect","Fab","BadgeSelected","badge","top","borderRadius","mainThemes","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","handleChange","handleControlChange","i","placement","themeColors","FormControl","component","FormLabel","RadioGroup","value","FormControlLabel","control","Radio","label","Grid","spacing","bg","item","lg","invisible","Paper","FormGroup","get","Layout2Customizer","Object","keys","layout2Settings","navbar","setOpen","updateSettings","newSettings","set","event","controlValue","target","tooglePanel","thumbnail","isPro","bgOpacity","SecondarySidebarContent","flexDirection","justifyContent","marginRight","SecondarySidenavTheme","secondarySidebarTheme","routes","useContext","AppContext","topbarTheme","layoutClasses","show","perfectScrollbar","renderRoutes"],"mappings":"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","file":"static/js/34.5f4e6108.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Icon,\r\n  Badge,\r\n  Card,\r\n  Button,\r\n  IconButton,\r\n  Drawer\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { getTimeDifference } from \"utils.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getNotification,\r\n  deleteAllNotification,\r\n  deleteNotification\r\n} from \"../../redux/actions/NotificationActions\";\r\n\r\nconst NotificationBar = props => {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    notification: notifcationList = [],\r\n    getNotification,\r\n    deleteAllNotification,\r\n    deleteNotification\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  function handleDrawerToggle() {\r\n    if (!panelOpen) {\r\n      getNotification();\r\n    }\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n  const parentThemePalette = theme.palette;\r\n\r\n  return (\r\n    <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={5}>\r\n          <Icon>notifications</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Drawer\r\n        width={\"100px\"}\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"notification\">\r\n          <div className=\"notification__topbar flex items-center p-4 mb-4\">\r\n            <Icon color=\"primary\">notifications</Icon>\r\n            <h5 className=\"ml-2 my-0 font-medium\">Notifications</h5>\r\n          </div>\r\n\r\n          {notifcationList.map(notification => (\r\n            <div\r\n              key={notification.id}\r\n              className=\"notification__card position-relative\"\r\n            >\r\n              <IconButton\r\n                size=\"small\"\r\n                className=\"delete-button bg-light-gray mr-6\"\r\n                onClick={() => deleteNotification(notification.id)}\r\n              >\r\n                <Icon className=\"text-muted\" fontSize=\"small\">\r\n                  clear\r\n                </Icon>\r\n              </IconButton>\r\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\r\n                <Card className=\"mx-4 mb-6\" elevation={3}>\r\n                  <div className=\"card__topbar flex items-center justify-between p-2 bg-light-gray\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"card__topbar__button\">\r\n                        <Icon\r\n                          className=\"card__topbar__icon\"\r\n                          fontSize=\"small\"\r\n                          color={notification.icon.color}\r\n                        >\r\n                          {notification.icon.name}\r\n                        </Icon>\r\n                      </div>\r\n                      <span className=\"ml-4 font-medium text-muted\">\r\n                        {notification.heading}\r\n                      </span>\r\n                    </div>\r\n                    <small className=\"card__topbar__time text-muted\">\r\n                      {getTimeDifference(new Date(notification.timestamp))} ago\r\n                    </small>\r\n                  </div>\r\n                  <div className=\"px-4 pt-2 pb-4\">\r\n                    <p className=\"m-0\">{notification.title}</p>\r\n                    <small className=\"text-muted\">\r\n                      {notification.subtitle}\r\n                    </small>\r\n                  </div>\r\n                </Card>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n\r\n          <div className=\"text-center\">\r\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nNotificationBar.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  notification: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  getNotification: PropTypes.func.isRequired,\r\n  deleteNotification: PropTypes.func.isRequired,\r\n  deleteAllNotification: PropTypes.func.isRequired,\r\n  notification: state.notification,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(\r\n  {},\r\n  { withTheme: true }\r\n)(\r\n  connect(mapStateToProps, {\r\n    getNotification,\r\n    deleteNotification,\r\n    deleteAllNotification\r\n  })(NotificationBar)\r\n);\r\n","import React from \"react\";\r\nimport { Icon, Badge, IconButton, Drawer } from \"@material-ui/core\";\r\nimport { ThemeProvider, withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCartList,\r\n  deleteProductFromCart,\r\n  updateCartAmount\r\n} from \"app/redux/actions/EcommerceActions\";\r\n\r\nlet cartListLoaded = false;\r\n\r\nfunction ShoppingCart(props) {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    cartList = [],\r\n    getCartList,\r\n    deleteProductFromCart,\r\n    updateCartAmount,\r\n    user\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  if (!cartListLoaded) {\r\n    getCartList(user.userId);\r\n    cartListLoaded = true;\r\n  }\r\n\r\n  function handleDrawerToggle() {\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n\r\n  const parentThemePalette = theme.palette;\r\n\r\n  return (\r\n    <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n          <Icon>shopping_cart</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Drawer\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"mini-cart\">\r\n          <div className=\"cart__topbar flex items-center p-1 mb-2 pl-4\">\r\n            <Icon color=\"primary\">shopping_cart</Icon>\r\n            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\r\n          </div>\r\n\r\n          {cartList.map(product => (\r\n            <div\r\n              key={product.id}\r\n              className=\"mini-cart__item flex items-center justify-between py-2 px-2\"\r\n            >\r\n              <div className=\"flex flex-column mr-2\">\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    updateCartAmount(\r\n                      user.userId,\r\n                      product.id,\r\n                      product.amount + 1\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_up</Icon>\r\n                </IconButton>\r\n                <IconButton\r\n                  disabled={!(product.amount - 1)}\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    updateCartAmount(\r\n                      user.userId,\r\n                      product.id,\r\n                      product.amount - 1\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_down</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"mr-2\">\r\n                <img src={product.imgUrl} alt={product.title} />\r\n              </div>\r\n              <div className=\"mr-2 text-center\">\r\n                <h6 className=\"m-0 mb-1\">{product.title}</h6>\r\n                <small className=\"text-muted\">\r\n                  ${product.price} x {product.amount}\r\n                </small>\r\n              </div>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => deleteProductFromCart(user.userId, product.id)}\r\n              >\r\n                <Icon fontSize=\"small\">clear</Icon>\r\n              </IconButton>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Drawer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nShoppingCart.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  cartList: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  getCartList: PropTypes.func.isRequired,\r\n  deleteProductFromCart: PropTypes.func.isRequired,\r\n  updateCartAmount: PropTypes.func.isRequired,\r\n  cartList: state.ecommerce.cartList,\r\n  user: state.user\r\n});\r\n\r\nexport default withStyles(\r\n  {},\r\n  { withTheme: true }\r\n)(\r\n  connect(mapStateToProps, {\r\n    getCartList,\r\n    deleteProductFromCart,\r\n    updateCartAmount\r\n  })(ShoppingCart)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Icon, IconButton, MenuItem } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MatxMenu, MatxSearchBox } from \"matx\";\r\nimport { isMdScreen, classList } from \"utils\";\r\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShoppingCart from \"../SharedCompoents/ShoppingCart\";\r\n\r\nconst styles = theme => ({\r\n  topbar: {\r\n    \"& .topbar-hold\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: \"80px\",\r\n      \"&.fixed\": {\r\n        boxShadow: theme.shadows[8],\r\n        height: \"64px\"\r\n      }\r\n    }\r\n  },\r\n  menuItem: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    minWidth: 185\r\n  }\r\n});\r\n\r\nclass Layout1Topbar extends Component {\r\n  state = {};\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSidebarToggle = () => {\r\n    let { settings } = this.props;\r\n    let { layout1Settings } = settings;\r\n\r\n    let mode;\r\n    if (isMdScreen()) {\r\n      mode = layout1Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\r\n    } else {\r\n      mode = layout1Settings.leftSidebar.mode === \"full\" ? \"close\" : \"full\";\r\n    }\r\n    this.updateSidebarMode({ mode });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    let { classes, fixed } = this.props;\r\n\r\n    return (\r\n      <div className={`topbar ${classes.topbar}`}>\r\n        <div className={classList({ \"topbar-hold\": true, fixed: fixed })}>\r\n          <div className=\"flex justify-between items-center h-full\">\r\n            <div className=\"flex\">\r\n              <IconButton\r\n                onClick={this.handleSidebarToggle}\r\n                className=\"hide-on-pc\"\r\n              >\r\n                <Icon>menu</Icon>\r\n              </IconButton>\r\n\r\n              <div className=\"hide-on-mobile\">\r\n                <IconButton>\r\n                  <Icon>mail_outline</Icon>\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                  <Icon>web_asset</Icon>\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                  <Icon>star_outline</Icon>\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <MatxSearchBox />\r\n\r\n              <NotificationBar />\r\n\r\n              <ShoppingCart></ShoppingCart>\r\n\r\n              <MatxMenu\r\n                menuButton={\r\n                  <img\r\n                    className=\"mx-2 align-middle circular-image-small cursor-pointer\"\r\n                    src=\"/assets/images/face-6.jpg\"\r\n                    alt=\"user\"\r\n                  />\r\n                }\r\n              >\r\n                <MenuItem>\r\n                  <Link className={classes.menuItem} to=\"/\">\r\n                    <Icon> home </Icon>\r\n                    <span className=\"pl-4\"> Home </span>\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  {/* <Link\r\n                    className={classes.menuItem}\r\n                    to=\"/page-layouts/user-profile\"\r\n                  > */}\r\n                  <Icon> person </Icon>\r\n                  <span className=\"pl-4\"> Profile </span>\r\n                  {/* </Link> */}\r\n                </MenuItem>\r\n                <MenuItem className={classes.menuItem}>\r\n                  <Icon> settings </Icon>\r\n                  <span className=\"pl-4\"> Settings </span>\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={this.handleSignOut}\r\n                  className={classes.menuItem}\r\n                >\r\n                  <Icon> power_settings_new </Icon>\r\n                  <span className=\"pl-4\"> Logout </span>\r\n                </MenuItem>\r\n              </MatxMenu>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Topbar.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(mapStateToProps, { setLayoutSettings, logoutUser })(Layout1Topbar)\r\n  )\r\n);\r\n","import React, { Fragment } from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { navigations } from \"../../navigations\";\r\nimport { MatxVerticalNav } from \"matx\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\n\r\nconst Sidenav = props => {\r\n  const updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = props;\r\n    let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const renderOverlay = () => (\r\n    <div\r\n      onClick={() => updateSidebarMode({ mode: \"close\" })}\r\n      className=\"sidenav__overlay\"\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Scrollbar\r\n        options={{ suppressScrollX: true }}\r\n        className=\"scrollable position-relative\"\r\n      >\r\n        {props.children}\r\n        <MatxVerticalNav navigation={navigations} />\r\n      </Scrollbar>\r\n      {renderOverlay()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nSidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings\r\n  })(Sidenav)\r\n);\r\n","import React from \"react\";\r\n\r\nconst Brand = ({ children }) => {\r\n  return (\r\n    <div className=\"flex items-center justify-between brand-area\">\r\n      <div className=\"flex items-center brand\">\r\n        <img src=\"/assets/images/logo.png\" alt=\"company-logo\" />\r\n        <span className=\"brand__text\">Matx</span>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Brand;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n    \"& .sidenav\": {\r\n      \"& .sidenav__hold\": {\r\n        opacity: \"1 !important\",\r\n        \"&::after\": {\r\n          background: theme.palette.primary.main,\r\n          opacity: .96\r\n        },\r\n        \"& .nav-item:not(.badge)\": {\r\n          color: theme.palette.text.primary\r\n        },\r\n        \"& .nav-item\": {\r\n          \"&.active, &.active:hover\": {\r\n            background: theme.palette.secondary.main\r\n          },\r\n          \"& .icon-text::after\": {\r\n            background: theme.palette.text.primary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst SidenavThemeStyles = ({ children, classes }) => {\r\n  return <div className={classes.root}>{children}</div>;\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SidenavThemeStyles);\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport SidenavThemeStyles from \"./SidenavThemeStyles\";\r\n\r\nconst SidenavTheme = ({ theme, settings, children }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <SidenavThemeStyles theme={theme} settings={settings}>\r\n        {children}\r\n      </SidenavThemeStyles>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch, Icon, MenuItem, Tooltip, IconButton } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MatxMenu } from \"matx\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport SidenavTheme from \"../MatxTheme/SidenavTheme/SidenavTheme\";\r\nimport { isMdScreen } from \"utils\";\r\nimport { merge } from \"lodash\";\r\n\r\nconst styles = theme => ({});\r\n\r\nconst IconButtonWhite = withStyles(theme => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    padding: \"5px\"\r\n  }\r\n}))(IconButton);\r\n\r\nconst IconSmall = withStyles(() => ({\r\n  root: {\r\n    fontSize: \"1rem\"\r\n  }\r\n}))(Icon);\r\n\r\nclass Layout1Sidenav extends Component {\r\n  state = {\r\n    hidden: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\r\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\r\n      if (isMdScreen()) {\r\n        this.updateSidebarMode({ mode: \"close\" });\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({ hidden: false });\r\n    }, 400);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlistenRouteChange();\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    const updatedSettings = merge({}, settings, {\r\n      layout1Settings: {\r\n        leftSidebar: {\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  handleSidenavToggle = () => {\r\n    let {\r\n      settings: {\r\n        layout1Settings: {\r\n          leftSidebar: { mode }\r\n        }\r\n      }\r\n    } = this.props;\r\n\r\n    console.log(mode);\r\n\r\n    this.updateSidebarMode({ mode: mode === \"compact\" ? \"full\" : \"compact\" });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  renderLogoSwitch = () => (\r\n    // Open Brand component file to replace logo and text\r\n    <Brand>\r\n      <Switch\r\n        className=\"sidenav__toggle show-on-pc\"\r\n        onChange={this.handleSidenavToggle}\r\n        checked={\r\n          !(this.props.settings.layout1Settings.leftSidebar.mode === \"full\")\r\n        }\r\n        color=\"secondary\"\r\n      />\r\n    </Brand>\r\n  );\r\n\r\n  renderUser = () => {\r\n    let { user } = this.props;\r\n    return (\r\n      <div className=\"sidenav__user\">\r\n        {/* <div className=\"username-photo\">\r\n          <img src={user.photoURL} alt=\"user\" />\r\n        </div> */}\r\n        <div className=\"ml-4\">\r\n          <span className=\"username\">\r\n            {/* <Icon>lock</Icon> */}\r\n            {user.nmusuario}\r\n          </span>\r\n          <div className=\"user__menu\">\r\n            <MatxMenu\r\n              menuButton={\r\n                <Tooltip title=\"Settings\">\r\n                  <IconButtonWhite\r\n                    aria-label=\"Delete\"\r\n                    className=\"\"\r\n                    size=\"small\"\r\n                  >\r\n                    <IconSmall> settings </IconSmall>\r\n                  </IconButtonWhite>\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <MenuItem className=\"flex items-center\">\r\n                <Icon> home </Icon>\r\n                <span className=\"pl-4\"> Home </span>\r\n              </MenuItem>\r\n              <MenuItem className=\"flex items-center\">\r\n                <Icon> settings </Icon>\r\n                <span className=\"pl-4\"> Account Setting </span>\r\n              </MenuItem>\r\n            </MatxMenu>\r\n\r\n            <Tooltip title=\"Profile\">\r\n              <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\r\n                <IconSmall>person</IconSmall>\r\n              </IconButtonWhite>\r\n            </Tooltip>\r\n            <Tooltip title=\"Sign out\">\r\n              <IconButtonWhite\r\n                aria-label=\"Delete\"\r\n                className=\"\"\r\n                size=\"small\"\r\n                onClick={this.handleSignOut}\r\n              >\r\n                <IconSmall>exit_to_app</IconSmall>\r\n              </IconButtonWhite>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const sidenavTheme =\r\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n    return (\r\n      <SidenavTheme theme={sidenavTheme} settings={settings}>\r\n        <div className=\"sidenav\">\r\n          <div\r\n            className=\"sidenav__hold\"\r\n            style={{\r\n              backgroundImage: `url(${settings.layout1Settings.leftSidebar.bgImgURL})`\r\n            }}\r\n          >\r\n            {!this.state.hidden && (\r\n              <Fragment>\r\n                {this.renderLogoSwitch()}\r\n                <Sidenav>{this.renderUser()}</Sidenav>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </SidenavTheme>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Sidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(mapStateToProps, {\r\n      setLayoutSettings,\r\n      setDefaultSettings,\r\n      logoutUser\r\n    })(Layout1Sidenav)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { Button, Toolbar, AppBar } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Footer = ({ theme, settings }) => {\r\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\r\n  return (\r\n    <></>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(\r\n  {},\r\n  { withTheme: true }\r\n)(connect(mapStateToProps, {})(Footer));\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { Fab, IconButton, Icon, useMediaQuery } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { merge } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { classList } from \"utils\";\r\n\r\nconst styles = theme => ({\r\n  toggle: {\r\n    position: \"fixed\",\r\n    right: \"-30px\",\r\n    bottom: \"20px\",\r\n    zIndex: 9999,\r\n    transition: \"all 0.15s ease\",\r\n    \"&.open\": {\r\n      right: \"10px\"\r\n    }\r\n  }\r\n});\r\n\r\nconst SecondarySidebarToggle = ({ classes, settings, setLayoutSettings }) => {\r\n  let isMobile = useMediaQuery(\"(max-width:767px)\");\r\n\r\n  const toggle = () => {\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        secondarySidebar: { open: !settings.secondarySidebar.open }\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        secondarySidebar: { open: !isMobile }\r\n      })\r\n    );\r\n  }, [isMobile, setLayoutSettings]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        classes.toggle +\r\n        \" \" +\r\n        classList({\r\n          open: settings.secondarySidebar.open\r\n        })\r\n      }\r\n    >\r\n      {settings.secondarySidebar.open && (\r\n        <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\r\n          <Icon>arrow_right</Icon>\r\n        </IconButton>\r\n      )}\r\n      {!settings.secondarySidebar.open && (\r\n        <Fab\r\n          variant=\"extended\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className=\"pr-9\"\r\n          onClick={toggle}\r\n        >\r\n          <Icon>arrow_left</Icon>\r\n        </Fab>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  setLayoutSettings: PropTypes.func.isRequired\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { setLayoutSettings })(SecondarySidebarToggle)\r\n);\r\n","import { Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\n\r\nconst BadgeSelected = withStyles(theme => ({\r\n  badge: {\r\n    top: \"0\",\r\n    right: \"0\",\r\n    height: \"32px\",\r\n    width: \"32px\",\r\n    borderRadius: \"50%\"\r\n  }\r\n}))(Badge);\r\n\r\nexport default BadgeSelected;\r\n","\r\nexport const mainThemes = ['purple1', 'purple2', 'blue', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const mainSidebarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const topbarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  FormGroup,\r\n  Icon,\r\n  Switch,\r\n  Grid,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { get } from \"lodash\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\r\n\r\nconst sidebarBG = [\r\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\r\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\"\r\n];\r\n\r\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\r\n        <div className=\"colors\">\r\n          {mainSidebarThemes\r\n            // .filter(c => themeColors[c].palette.type === \"dark\")\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"color\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.leftSidebar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {topbarThemes.map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout1Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout1Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"Sidebar\"\r\n            name=\"leftSidebar\"\r\n            value={settings.layout1Settings.leftSidebar.mode}\r\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\r\n            <FormControlLabel\r\n              value=\"compact\"\r\n              control={<Radio />}\r\n              label=\"Compact\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted mb-8\">Sidebar background image</div>\r\n\r\n        <div className=\"layout-boxes sidebar-bg\">\r\n          <Grid container spacing={3}>\r\n            {sidebarBG.map((bg, i) => (\r\n              <Grid item lg={4} key={i}>\r\n                <BadgeSelected\r\n                  color=\"primary\"\r\n                  className=\"layout-box mr-4\"\r\n                  badgeContent={<Icon>done</Icon>}\r\n                  invisible={\r\n                    settings.layout1Settings.leftSidebar.bgImgURL !== bg\r\n                  }\r\n                >\r\n                  <Paper\r\n                    onClick={() =>\r\n                      handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\r\n                    }\r\n                    className=\"h-160\"\r\n                  >\r\n                    <img src={bg} alt=\"\" />\r\n                  </Paper>\r\n                </BadgeSelected>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted\">Sidebar background opacity</div>\r\n        <Slider\r\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\r\n          onChange={(event, value) =>\r\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\r\n          }\r\n          marks={true}\r\n          step={0.02}\r\n          max={1}\r\n          min={0.5}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"sidebar-bgOpacity\"\r\n        />\r\n      </div> */}\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Topbar</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\r\n                />\r\n              }\r\n              label=\"Show\"\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\r\n                />\r\n              }\r\n              label=\"Fixed\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout1Customizer;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  Icon,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\n\r\nconst Layout2Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Navbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.navbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.navbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Layout mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"layout-mode\"\r\n            name=\"layoutMode\"\r\n            value={settings.layout2Settings.mode}\r\n            onChange={handleControlChange(\"layout2Settings.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel\r\n              value=\"contained\"\r\n              control={<Radio />}\r\n              label=\"Contained\"\r\n            />\r\n            <FormControlLabel value=\"boxed\" control={<Radio />} label=\"Boxed\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout2Customizer;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  Button,\r\n  FormGroup,\r\n  Tooltip,\r\n  Switch,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { merge, get, set } from \"lodash\";\r\nimport Layout1Customizer from \"./Layout1Customizer\";\r\nimport Layout2Customizer from \"./Layout2Customizer\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\r\n\r\nconst styles = theme => ({\r\n  root: {}\r\n});\r\n\r\nconst MatxCustomizer = props => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  let { settings, classes, setLayoutSettings, setDefaultSettings } = props;\r\n\r\n  const demoLayouts = [\r\n    {\r\n      name: \"Light Sidebar\",\r\n      thumbnail: \"/assets/images/screenshots/layout1-customizer.png\",\r\n      isPro: false,\r\n      options: {\r\n        activeLayout: \"layout1\",\r\n        activeTheme: \"purple1\",\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            theme: \"white\",\r\n            bgOpacity: 0.98\r\n          },\r\n          topbar: {\r\n            theme: \"purpleDark1\",\r\n            fixed: true\r\n          }\r\n        },\r\n        footer: {\r\n          theme: \"slateDark1\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: \"Dark Sidebar\",\r\n      thumbnail: \"/assets/images/screenshots/layout2-customizer.png\",\r\n      isPro: false,\r\n      options: {\r\n        activeLayout: \"layout1\",\r\n        activeTheme: \"purple1\",\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            theme: \"slateDark1\",\r\n            bgOpacity: 0.92\r\n          },\r\n          topbar: {\r\n            theme: \"purpleDark1\",\r\n            fixed: false\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: \"Dark Theme\",\r\n      thumbnail: \"/assets/images/screenshots/layout3-customizer.png\",\r\n      isPro: false,\r\n      options: {\r\n        activeLayout: \"layout1\",\r\n        activeTheme: \"purpleDark1\",\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            theme: \"slateDark1\",\r\n            bgOpacity: 0.92\r\n          },\r\n          topbar: {\r\n            theme: \"purpleDark1\",\r\n            fixed: false\r\n          }\r\n        },\r\n        footer: {\r\n          theme: \"slateDark1\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: \"Horizontal Navigation\",\r\n      thumbnail: \"/assets/images/screenshots/layout4-customizer.png\",\r\n      isPro: true,\r\n      options: {\r\n        activeLayout: \"layout2\",\r\n        activeTheme: \"purple1\",\r\n        layout2Settings: {\r\n          mode: \"full\"\r\n          // topbar: {\r\n          //   theme: \"slateDark1\"\r\n          // }\r\n        },\r\n        footer: {\r\n          theme: \"slateDark1\"\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n  const updateSettings = newSettings => {\r\n    let updatedSettings = merge({}, settings, newSettings);\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  const handleChange = (name, value) => {\r\n    let { settings } = props;\r\n    let updatedSettings = set(settings, name, value);\r\n\r\n    updateSettings(updatedSettings);\r\n  };\r\n\r\n  const handleControlChange = name => event => {\r\n    let controlValue =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    handleChange(name, controlValue);\r\n  };\r\n\r\n  const tooglePanel = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n  // console.log(activeTheme);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n        <IconButton\r\n          size=\"small\"\r\n          aria-label=\"delete\"\r\n          className=\"my-3\"\r\n          onClick={tooglePanel}\r\n        >\r\n          <Icon className=\"spin\">settings</Icon>\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      {open && (\r\n        <ThemeProvider theme={activeTheme}>\r\n          <div\r\n            className={`matx-customizer pb-8 ${classes.root}`}\r\n            style={{\r\n              backgroundColor: activeTheme.palette.background.default\r\n            }}\r\n          >\r\n            <div className=\"flex felx-row items-center p-4 mb-4 min-h-64 elevation-z6\">\r\n              <Icon color=\"primary\">settings</Icon>\r\n              <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\r\n              <IconButton onClick={tooglePanel} className=\"customizer-close\">\r\n                <Icon>close</Icon>\r\n              </IconButton>\r\n            </div>\r\n            <Scrollbar options={{ suppressScrollX: true }} className=\"px-4\">\r\n              <div className=\"mt-2 mb-8 mx-3\">\r\n                <div className=\"text-muted\">Layouts</div>\r\n\r\n                <div className=\"layout-boxes\">\r\n                  {demoLayouts.map(layout => (\r\n                    <BadgeSelected\r\n                      color=\"secondary\"\r\n                      className=\"layout-box\"\r\n                      badgeContent={\"Pro\"}\r\n                      invisible={!layout.isPro}\r\n                      key={layout.name}\r\n                    >\r\n                      <Paper\r\n                        onClick={() => updateSettings(layout.options)}\r\n                        elevation={4}\r\n                      >\r\n                        <span className=\"layout-name\">\r\n                          <Button variant=\"contained\" color=\"secondary\">\r\n                            {layout.name}\r\n                          </Button>\r\n                        </span>\r\n\r\n                        <img src={layout.thumbnail} alt={layout.name} />\r\n                      </Paper>\r\n                    </BadgeSelected>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              {/* END LAYOUT */}\r\n\r\n              <div className=\"mb-4 mx-3\">\r\n                <div className=\"text-muted mb-4\">Main theme</div>\r\n                <div className=\"colors\">\r\n                  {mainThemes.map((color, i) => (\r\n                    <Tooltip key={i} title={color} placement=\"top\">\r\n                      <div\r\n                        className=\"color\"\r\n                        onClick={() => updateSettings({ activeTheme: color })}\r\n                        style={{\r\n                          backgroundColor:\r\n                            themeColors[color].palette.primary.main\r\n                        }}\r\n                      >\r\n                        {settings.activeTheme === color && <Icon>done</Icon>}\r\n                        <div\r\n                          className={settings.themes[color].palette.type}\r\n                        ></div>\r\n                      </div>\r\n                    </Tooltip>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {settings.activeLayout === \"layout1\" && (\r\n                <Layout1Customizer\r\n                  settings={settings}\r\n                  handleChange={handleChange}\r\n                  handleControlChange={handleControlChange}\r\n                />\r\n              )}\r\n\r\n              {settings.activeLayout === \"layout2\" && (\r\n                <Layout2Customizer\r\n                  settings={settings}\r\n                  handleChange={handleChange}\r\n                  handleControlChange={handleControlChange}\r\n                />\r\n              )}\r\n\r\n              <div className=\"mx-3 mb-6\">\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">Footer</FormLabel>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={get(settings.footer, \"show\")}\r\n                          onChange={handleControlChange(\"footer.show\")}\r\n                        />\r\n                      }\r\n                      label=\"Show\"\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={get(\r\n                            settings.layout1Settings.footer,\r\n                            \"fixed\"\r\n                          )}\r\n                          onChange={handleControlChange(\"footer.fixed\")}\r\n                        />\r\n                      }\r\n                      label=\"Fixed\"\r\n                    />\r\n                  </FormGroup>\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div className=\"mx-3 mb-6\">\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">Secondary sidebar</FormLabel>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={get(settings.secondarySidebar, \"show\")}\r\n                          onChange={handleControlChange(\r\n                            \"secondarySidebar.show\"\r\n                          )}\r\n                        />\r\n                      }\r\n                      label=\"Show\"\r\n                    />\r\n                  </FormGroup>\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div className=\"mb-4 mx-3\">\r\n                <div className=\"text-muted mb-4\">Secondary sidebar theme</div>\r\n                <div className=\"colors\">\r\n                  {topbarThemes.map((color, i) => (\r\n                    <Tooltip key={i} title={color} placement=\"top\">\r\n                      <div\r\n                        className=\"color\"\r\n                        onClick={() =>\r\n                          handleChange(\"secondarySidebar.theme\", color)\r\n                        }\r\n                        style={{\r\n                          backgroundColor:\r\n                            themeColors[color].palette.primary.main\r\n                        }}\r\n                      >\r\n                        {settings.secondarySidebar.theme === color && (\r\n                          <Icon>done</Icon>\r\n                        )}\r\n                        <div\r\n                          className={settings.themes[color].palette.type}\r\n                        ></div>\r\n                      </div>\r\n                    </Tooltip>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-4 mx-3\">\r\n                <div className=\"text-muted mb-4\">Footer theme</div>\r\n                <div className=\"colors\">\r\n                  {topbarThemes.map((color, i) => (\r\n                    <Tooltip key={i} title={color} placement=\"top\">\r\n                      <div\r\n                        className=\"color\"\r\n                        onClick={() => handleChange(\"footer.theme\", color)}\r\n                        style={{\r\n                          backgroundColor:\r\n                            themeColors[color].palette.primary.main\r\n                        }}\r\n                      >\r\n                        {settings.footer.theme === color && <Icon>done</Icon>}\r\n                        <div\r\n                          className={settings.themes[color].palette.type}\r\n                        ></div>\r\n                      </div>\r\n                    </Tooltip>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </Scrollbar>\r\n          </div>\r\n        </ThemeProvider>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { setLayoutSettings, setDefaultSettings })(\r\n    MatxCustomizer\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { IconButton, Icon } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { classList } from \"utils\";\r\nimport MatxCustomizer from \"../MatxCustomizer/MatxCustomizer\";\r\nimport ShoppingCart from \"../ShoppingCart\";\r\nconst width = \"50px\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    width,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    boxShadow: theme.shadows[8],\r\n    backgroundColor: theme.palette.primary.main,\r\n    zIndex: 98,\r\n    transition: \"all 0.15s ease\"\r\n  },\r\n  \"@global\": {\r\n    \"@media screen and (min-width: 767px)\": {\r\n      \".content-wrap, .layout2.layout-contained, .layout2.layout-full\": {\r\n        marginRight: width\r\n      },\r\n      \".matx-customizer\": {\r\n        right: width\r\n      }\r\n    },\r\n    \"@media screen and (max-width: 959px)\": {\r\n      \".toolbar-menu-wrap .menu-area\": {\r\n        width: `calc(100% - ${width})`\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nclass SecondarySidebarContent extends Component {\r\n  render() {\r\n    let { classes } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          classes.root +\r\n          \" \" +\r\n          classList({\r\n            \"secondary-sidebar\": true\r\n          })\r\n        }\r\n      >\r\n        <span className=\"m-auto\"></span>\r\n\r\n        <MatxCustomizer />\r\n\r\n        <ShoppingCart />\r\n\r\n        <Link to=\"/chat\">\r\n          <IconButton size=\"small\" aria-label=\"delete\" className=\"my-3\">\r\n            <Icon>comments</Icon>\r\n          </IconButton>\r\n        </Link>\r\n\r\n        <span className=\"m-auto\"></span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(connect(mapStateToProps, {})(SecondarySidebarContent))\r\n);\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default SecondarySidenavTheme\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SecondarySidebarToggle from \"./SecondarySidebarToggle\";\r\nimport SecondarySidebarContent from \"./SecondarySidebarContent\";\r\nimport SecondarySidenavTheme from \"../../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme\";\r\n\r\nconst SecondarySidebar = ({ settings }) => {\r\n  const secondarySidebarTheme =\r\n    settings.themes[settings.secondarySidebar.theme];\r\n\r\n  return (\r\n    <SecondarySidenavTheme theme={secondarySidebarTheme}>\r\n      {settings.secondarySidebar.open && (\r\n        <SecondarySidebarContent />\r\n      )}\r\n      <SecondarySidebarToggle />\r\n    </SecondarySidenavTheme>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(SecondarySidebar);\r\n","import React, { useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { classList } from \"utils\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport Layout1Topbar from \"./Layout1Topbar\";\r\nimport Layout1Sidenav from \"./Layout1Sidenav\";\r\nimport Footer from \"../SharedCompoents/Footer\";\r\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar/SecondarySidebar\";\r\nimport AppContext from \"app/appContext\";\r\nimport { MatxSuspense } from \"matx\";\r\n\r\nconst styles = theme => {\r\n  return {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  };\r\n};\r\n\r\nconst Layout1 = props => {\r\n  const { routes } = useContext(AppContext);\r\n  let { settings, classes, theme } = props;\r\n  let { layout1Settings } = settings;\r\n  const topbarTheme = settings.themes[layout1Settings.topbar.theme];\r\n  let layoutClasses = {\r\n    [classes.layout]: true,\r\n    [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\r\n    \"topbar-fixed\": layout1Settings.topbar.fixed\r\n  };\r\n\r\n  return (\r\n    <div className={classList(layoutClasses)}>\r\n      {layout1Settings.leftSidebar.show && <Layout1Sidenav />}\r\n\r\n      <div className=\"content-wrap position-relative\">\r\n        {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n          <ThemeProvider theme={topbarTheme}>\r\n            <Layout1Topbar fixed={true} className=\"elevation-z8\" />\r\n          </ThemeProvider>\r\n        )}\r\n\r\n        {settings.perfectScrollbar && (\r\n          <Scrollbar className=\"scrollable-content\">\r\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\r\n              <ThemeProvider theme={topbarTheme}>\r\n                <Layout1Topbar />\r\n              </ThemeProvider>\r\n            )}\r\n            <div className=\"content\">\r\n              <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\r\n            </div>\r\n            <div className=\"my-auto\" />\r\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n          </Scrollbar>\r\n        )}\r\n\r\n        {!settings.perfectScrollbar && (\r\n          <div className=\"scrollable-content\">\r\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\r\n              <Layout1Topbar />\r\n            )}\r\n            <div className=\"content\">\r\n              <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\r\n            </div>\r\n            <div className=\"my-auto\" />\r\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n          </div>\r\n        )}\r\n\r\n        {settings.footer.show && settings.footer.fixed && <Footer />}\r\n      </div>\r\n      {settings.secondarySidebar.show && <SecondarySidebar />}\r\n    </div>\r\n  );\r\n};\r\n\r\nLayout1.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { setLayoutSettings })(Layout1)\r\n);\r\n"],"sourceRoot":""}