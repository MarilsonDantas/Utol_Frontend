{"version":3,"sources":["app/MatxLayout/SharedCompoents/NotificationBar.jsx","app/MatxLayout/SharedCompoents/ShoppingCart.jsx","app/MatxLayout/Layout1/Layout1Topbar.jsx","app/MatxLayout/SharedCompoents/Sidenav.jsx","app/MatxLayout/SharedCompoents/Brand.jsx","app/MatxLayout/MatxTheme/SidenavTheme/SidenavThemeStyles.jsx","app/MatxLayout/MatxTheme/SidenavTheme/SidenavTheme.jsx","app/MatxLayout/Layout1/Layout1Sidenav.jsx","app/MatxLayout/SharedCompoents/Footer.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebarToggle.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/BadgeSelected.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/customizerOptions.js","app/MatxLayout/SharedCompoents/MatxCustomizer/Layout1Customizer.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/Layout2Customizer.jsx","app/MatxLayout/SharedCompoents/MatxCustomizer/MatxCustomizer.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebarContent.jsx","app/MatxLayout/MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme.jsx","app/MatxLayout/SharedCompoents/SecondarySidebar/SecondarySidebar.jsx","app/MatxLayout/Layout1/Layout1.jsx"],"names":["withStyles","withTheme","connect","state","getNotification","PropTypes","func","isRequired","deleteNotification","deleteAllNotification","notification","settings","layout","props","container","theme","_props$notification","notifcationList","_React$useState","React","useState","_React$useState2","Object","slicedToArray","panelOpen","setPanelOpen","handleDrawerToggle","parentThemePalette","palette","react_default","a","createElement","ThemeProvider","themes","activeTheme","IconButton","onClick","style","color","type","text","secondary","primary","Badge","badgeContent","Icon","Drawer","width","variant","anchor","open","onClose","ModalProps","keepMounted","className","map","key","id","size","fontSize","react_router_dom","to","concat","path","Card","elevation","icon","name","heading","getTimeDifference","Date","timestamp","title","subtitle","Button","cartListLoaded","getCartList","deleteProductFromCart","updateCartAmount","cartList","ecommerce","user","_props$cartList","userId","length","product","amount","disabled","src","imgUrl","alt","price","topbar","& .topbar-hold","backgroundColor","main","height","&.fixed","boxShadow","shadows","menuItem","display","alignItems","minWidth","withRouter","setLayoutSettings","logoutUser","Component","[object Object]","args","super","this","updateSidebarMode","sidebarSettings","_this$props","objectSpread2","layout1Settings","leftSidebar","handleSidebarToggle","mode","isMdScreen","handleSignOut","render","_this$props2","classes","fixed","classList","topbar-hold","matx","SharedCompoents_NotificationBar","SharedCompoents_ShoppingCart","menuButton","MenuItem","react","lib_default","options","suppressScrollX","children","navigation","navigations","activeLayoutSettingsName","activeLayout","activeLayoutSettings","Brand","root","background","default","& .sidenav","& .sidenav__hold","opacity","&::after","& .nav-item:not(.badge)","& .nav-item","&.active, &.active:hover","& .icon-text::after","SidenavTheme","SidenavTheme_SidenavThemeStyles","IconButtonWhite","padding","IconSmall","setDefaultSettings","hidden","updatedSettings","merge","handleSidenavToggle","console","log","renderLogoSwitch","SharedCompoents_Brand","Switch","onChange","checked","renderUser","nmusuario","Tooltip","aria-label","componentDidMount","unlistenRouteChange","history","listen","location","action","setTimeout","setState","componentWillUnmount","sidenavTheme","SidenavTheme_SidenavTheme","backgroundImage","bgImgURL","SharedCompoents_Sidenav","Footer","footer","Fragment","propTypes","object","toggle","position","right","bottom","zIndex","transition","&.open","isMobile","useMediaQuery","secondarySidebar","useEffect","Fab","BadgeSelected","badge","top","borderRadius","mainThemes","mainSidebarThemes","topbarThemes","sidebarBG","Layout1Customizer","handleChange","handleControlChange","i","placement","themeColors","FormControl","component","FormLabel","RadioGroup","value","FormControlLabel","control","Radio","label","Grid","spacing","bg","item","lg","MatxCustomizer_BadgeSelected","invisible","Paper","FormGroup","get","Layout2Customizer","keys","layout2Settings","navbar","_useState","_useState2","setOpen","updateSettings","newSettings","set","event","controlValue","target","tooglePanel","thumbnail","isPro","bgOpacity","MatxCustomizer_Layout1Customizer","MatxCustomizer_Layout2Customizer","flexDirection","justifyContent","@global","@media screen and (min-width: 767px)",".content-wrap, .layout2.layout-contained, .layout2.layout-full","marginRight",".matx-customizer","@media screen and (max-width: 959px)",".toolbar-menu-wrap .menu-area","secondary-sidebar","MatxCustomizer_MatxCustomizer","SecondarySidenavTheme","secondarySidebarTheme","SecondarySidenavTheme_SecondarySidenavTheme","SecondarySidebar_SecondarySidebarContent","SecondarySidebar_SecondarySidebarToggle","routes","useContext","AppContext","topbarTheme","layoutClasses","topbar-fixed","show","Layout1_Layout1Sidenav","Layout1_Layout1Topbar","perfectScrollbar","renderRoutes","SharedCompoents_Footer","SecondarySidebar_SecondarySidebar"],"mappings":"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","file":"static/js/19.7b2da6c8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Icon,\r\n  Badge,\r\n  Card,\r\n  Button,\r\n  IconButton,\r\n  Drawer\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { getTimeDifference } from \"utils.js\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getNotification,\r\n  deleteAllNotification,\r\n  deleteNotification\r\n} from \"../../redux/actions/NotificationActions\";\r\n\r\nconst NotificationBar = props => {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    notification: notifcationList = [],\r\n    getNotification,\r\n    deleteAllNotification,\r\n    deleteNotification\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  function handleDrawerToggle() {\r\n    if (!panelOpen) {\r\n      getNotification();\r\n    }\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n  const parentThemePalette = theme.palette;\r\n\r\n  return (\r\n    <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={5}>\r\n          <Icon>notifications</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Drawer\r\n        width={\"100px\"}\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"notification\">\r\n          <div className=\"notification__topbar flex items-center p-4 mb-4\">\r\n            <Icon color=\"primary\">notifications</Icon>\r\n            <h5 className=\"ml-2 my-0 font-medium\">Notifications</h5>\r\n          </div>\r\n\r\n          {notifcationList.map(notification => (\r\n            <div\r\n              key={notification.id}\r\n              className=\"notification__card position-relative\"\r\n            >\r\n              <IconButton\r\n                size=\"small\"\r\n                className=\"delete-button bg-light-gray mr-6\"\r\n                onClick={() => deleteNotification(notification.id)}\r\n              >\r\n                <Icon className=\"text-muted\" fontSize=\"small\">\r\n                  clear\r\n                </Icon>\r\n              </IconButton>\r\n              <Link to={`/${notification.path}`} onClick={handleDrawerToggle}>\r\n                <Card className=\"mx-4 mb-6\" elevation={3}>\r\n                  <div className=\"card__topbar flex items-center justify-between p-2 bg-light-gray\">\r\n                    <div className=\"flex items-center\">\r\n                      <div className=\"card__topbar__button\">\r\n                        <Icon\r\n                          className=\"card__topbar__icon\"\r\n                          fontSize=\"small\"\r\n                          color={notification.icon.color}\r\n                        >\r\n                          {notification.icon.name}\r\n                        </Icon>\r\n                      </div>\r\n                      <span className=\"ml-4 font-medium text-muted\">\r\n                        {notification.heading}\r\n                      </span>\r\n                    </div>\r\n                    <small className=\"card__topbar__time text-muted\">\r\n                      {getTimeDifference(new Date(notification.timestamp))} ago\r\n                    </small>\r\n                  </div>\r\n                  <div className=\"px-4 pt-2 pb-4\">\r\n                    <p className=\"m-0\">{notification.title}</p>\r\n                    <small className=\"text-muted\">\r\n                      {notification.subtitle}\r\n                    </small>\r\n                  </div>\r\n                </Card>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n\r\n          <div className=\"text-center\">\r\n            <Button onClick={deleteAllNotification}>Clear Notifications</Button>\r\n          </div>\r\n        </div>\r\n      </Drawer>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nNotificationBar.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  notification: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  getNotification: PropTypes.func.isRequired,\r\n  deleteNotification: PropTypes.func.isRequired,\r\n  deleteAllNotification: PropTypes.func.isRequired,\r\n  notification: state.notification,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(\r\n  {},\r\n  { withTheme: true }\r\n)(\r\n  connect(mapStateToProps, {\r\n    getNotification,\r\n    deleteNotification,\r\n    deleteAllNotification\r\n  })(NotificationBar)\r\n);\r\n","import React from \"react\";\r\nimport { Icon, Badge, IconButton, Drawer } from \"@material-ui/core\";\r\nimport { ThemeProvider, withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCartList,\r\n  deleteProductFromCart,\r\n  updateCartAmount\r\n} from \"app/redux/actions/EcommerceActions\";\r\n\r\nlet cartListLoaded = false;\r\n\r\nfunction ShoppingCart(props) {\r\n  const {\r\n    container,\r\n    theme,\r\n    settings,\r\n    cartList = [],\r\n    getCartList,\r\n    deleteProductFromCart,\r\n    updateCartAmount,\r\n    user\r\n  } = props;\r\n\r\n  const [panelOpen, setPanelOpen] = React.useState(false);\r\n\r\n  if (!cartListLoaded) {\r\n    getCartList(user.userId);\r\n    cartListLoaded = true;\r\n  }\r\n\r\n  function handleDrawerToggle() {\r\n    setPanelOpen(!panelOpen);\r\n  }\r\n\r\n  const parentThemePalette = theme.palette;\r\n\r\n  return (\r\n    <ThemeProvider theme={settings.themes[settings.activeTheme]}>\r\n      <IconButton\r\n        onClick={handleDrawerToggle}\r\n        style={{\r\n          color:\r\n            parentThemePalette.type === \"light\"\r\n              ? parentThemePalette.text.secondary\r\n              : parentThemePalette.text.primary\r\n        }}\r\n      >\r\n        <Badge color=\"secondary\" badgeContent={cartList.length}>\r\n          <Icon>shopping_cart</Icon>\r\n        </Badge>\r\n      </IconButton>\r\n\r\n      <Drawer\r\n        container={container}\r\n        variant=\"temporary\"\r\n        anchor={\"right\"}\r\n        open={panelOpen}\r\n        onClose={handleDrawerToggle}\r\n        ModalProps={{\r\n          keepMounted: true\r\n        }}\r\n      >\r\n        <div className=\"mini-cart\">\r\n          <div className=\"cart__topbar flex items-center p-1 mb-2 pl-4\">\r\n            <Icon color=\"primary\">shopping_cart</Icon>\r\n            <h5 className=\"ml-2 my-0 font-medium\">Cart</h5>\r\n          </div>\r\n\r\n          {cartList.map(product => (\r\n            <div\r\n              key={product.id}\r\n              className=\"mini-cart__item flex items-center justify-between py-2 px-2\"\r\n            >\r\n              <div className=\"flex flex-column mr-2\">\r\n                <IconButton\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    updateCartAmount(\r\n                      user.userId,\r\n                      product.id,\r\n                      product.amount + 1\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_up</Icon>\r\n                </IconButton>\r\n                <IconButton\r\n                  disabled={!(product.amount - 1)}\r\n                  size=\"small\"\r\n                  onClick={() =>\r\n                    updateCartAmount(\r\n                      user.userId,\r\n                      product.id,\r\n                      product.amount - 1\r\n                    )\r\n                  }\r\n                >\r\n                  <Icon className=\"cursor-pointer\">keyboard_arrow_down</Icon>\r\n                </IconButton>\r\n              </div>\r\n              <div className=\"mr-2\">\r\n                <img src={product.imgUrl} alt={product.title} />\r\n              </div>\r\n              <div className=\"mr-2 text-center\">\r\n                <h6 className=\"m-0 mb-1\">{product.title}</h6>\r\n                <small className=\"text-muted\">\r\n                  ${product.price} x {product.amount}\r\n                </small>\r\n              </div>\r\n              <IconButton\r\n                size=\"small\"\r\n                onClick={() => deleteProductFromCart(user.userId, product.id)}\r\n              >\r\n                <Icon fontSize=\"small\">clear</Icon>\r\n              </IconButton>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </Drawer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nShoppingCart.propTypes = {\r\n  settings: PropTypes.object.isRequired,\r\n  cartList: PropTypes.array.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  getCartList: PropTypes.func.isRequired,\r\n  deleteProductFromCart: PropTypes.func.isRequired,\r\n  updateCartAmount: PropTypes.func.isRequired,\r\n  cartList: state.ecommerce.cartList,\r\n  user: state.user\r\n});\r\n\r\nexport default withStyles(\r\n  {},\r\n  { withTheme: true }\r\n)(\r\n  connect(mapStateToProps, {\r\n    getCartList,\r\n    deleteProductFromCart,\r\n    updateCartAmount\r\n  })(ShoppingCart)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { Icon, IconButton, MenuItem } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MatxMenu, MatxSearchBox } from \"matx\";\r\nimport { isMdScreen, classList } from \"utils\";\r\nimport NotificationBar from \"../SharedCompoents/NotificationBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ShoppingCart from \"../SharedCompoents/ShoppingCart\";\r\n\r\nconst styles = theme => ({\r\n  topbar: {\r\n    \"& .topbar-hold\": {\r\n      backgroundColor: theme.palette.primary.main,\r\n      height: \"80px\",\r\n      \"&.fixed\": {\r\n        boxShadow: theme.shadows[8],\r\n        height: \"64px\"\r\n      }\r\n    }\r\n  },\r\n  menuItem: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    minWidth: 185\r\n  }\r\n});\r\n\r\nclass Layout1Topbar extends Component {\r\n  state = {};\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = this.props;\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      layout1Settings: {\r\n        ...settings.layout1Settings,\r\n        leftSidebar: {\r\n          ...settings.layout1Settings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSidebarToggle = () => {\r\n    let { settings } = this.props;\r\n    let { layout1Settings } = settings;\r\n\r\n    let mode;\r\n    if (isMdScreen()) {\r\n      mode = layout1Settings.leftSidebar.mode === \"close\" ? \"mobile\" : \"close\";\r\n    } else {\r\n      mode = layout1Settings.leftSidebar.mode === \"full\" ? \"close\" : \"full\";\r\n    }\r\n    this.updateSidebarMode({ mode });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  render() {\r\n    let { classes, fixed } = this.props;\r\n\r\n    return (\r\n      <div className={`topbar ${classes.topbar}`}>\r\n        <div className={classList({ \"topbar-hold\": true, fixed: fixed })}>\r\n          <div className=\"flex justify-between items-center h-full\">\r\n            <div className=\"flex\">\r\n              <IconButton\r\n                onClick={this.handleSidebarToggle}\r\n                className=\"hide-on-pc\"\r\n              >\r\n                <Icon>menu</Icon>\r\n              </IconButton>\r\n\r\n              <div className=\"hide-on-mobile\">\r\n                <IconButton>\r\n                  <Icon>mail_outline</Icon>\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                  <Icon>web_asset</Icon>\r\n                </IconButton>\r\n\r\n                <IconButton>\r\n                  <Icon>star_outline</Icon>\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex items-center\">\r\n              <MatxSearchBox />\r\n\r\n              <NotificationBar />\r\n\r\n              <ShoppingCart></ShoppingCart>\r\n\r\n              <MatxMenu\r\n                menuButton={\r\n                  <img\r\n                    className=\"mx-2 align-middle circular-image-small cursor-pointer\"\r\n                    src=\"/assets/images/face-6.jpg\"\r\n                    alt=\"user\"\r\n                  />\r\n                }\r\n              >\r\n                <MenuItem>\r\n                  <Link className={classes.menuItem} to=\"/\">\r\n                    <Icon> home </Icon>\r\n                    <span className=\"pl-4\"> Home </span>\r\n                  </Link>\r\n                </MenuItem>\r\n                <MenuItem>\r\n                  {/* <Link\r\n                    className={classes.menuItem}\r\n                    to=\"/page-layouts/user-profile\"\r\n                  > */}\r\n                  <Icon> person </Icon>\r\n                  <span className=\"pl-4\"> Profile </span>\r\n                  {/* </Link> */}\r\n                </MenuItem>\r\n                <MenuItem className={classes.menuItem}>\r\n                  <Icon> settings </Icon>\r\n                  <span className=\"pl-4\"> Settings </span>\r\n                </MenuItem>\r\n                <MenuItem\r\n                  onClick={this.handleSignOut}\r\n                  className={classes.menuItem}\r\n                >\r\n                  <Icon> power_settings_new </Icon>\r\n                  <span className=\"pl-4\"> Logout </span>\r\n                </MenuItem>\r\n              </MatxMenu>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Topbar.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(mapStateToProps, { setLayoutSettings, logoutUser })(Layout1Topbar)\r\n  )\r\n);\r\n","import React, { Fragment } from \"react\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { navigations } from \"../../navigations\";\r\nimport { MatxVerticalNav } from \"matx\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\n\r\nconst Sidenav = props => {\r\n  const updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings } = props;\r\n    let activeLayoutSettingsName = settings.activeLayout + \"Settings\";\r\n    let activeLayoutSettings = settings[activeLayoutSettingsName];\r\n\r\n    setLayoutSettings({\r\n      ...settings,\r\n      [activeLayoutSettingsName]: {\r\n        ...activeLayoutSettings,\r\n        leftSidebar: {\r\n          ...activeLayoutSettings.leftSidebar,\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const renderOverlay = () => (\r\n    <div\r\n      onClick={() => updateSidebarMode({ mode: \"close\" })}\r\n      className=\"sidenav__overlay\"\r\n    />\r\n  );\r\n\r\n  return (\r\n    <Fragment>\r\n      <Scrollbar\r\n        options={{ suppressScrollX: true }}\r\n        className=\"scrollable position-relative\"\r\n      >\r\n        {props.children}\r\n        <MatxVerticalNav navigation={navigations} />\r\n      </Scrollbar>\r\n      {renderOverlay()}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nSidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withRouter(\r\n  connect(mapStateToProps, {\r\n    setLayoutSettings\r\n  })(Sidenav)\r\n);\r\n","import React from \"react\";\r\n\r\nconst Brand = ({ children }) => {\r\n  return (\r\n    <div className=\"flex items-center justify-between brand-area\">\r\n      <div className=\"flex items-center brand\">\r\n        <img src=\"/assets/images/logo.png\" alt=\"company-logo\" />\r\n        <span className=\"brand__text\">Utol</span>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Brand;\r\n","import React from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.default,\r\n    color: theme.palette.text.primary,\r\n    \"& .sidenav\": {\r\n      \"& .sidenav__hold\": {\r\n        opacity: \"1 !important\",\r\n        \"&::after\": {\r\n          background: theme.palette.primary.main,\r\n          opacity: .96\r\n        },\r\n        \"& .nav-item:not(.badge)\": {\r\n          color: theme.palette.text.primary\r\n        },\r\n        \"& .nav-item\": {\r\n          \"&.active, &.active:hover\": {\r\n            background: theme.palette.secondary.main\r\n          },\r\n          \"& .icon-text::after\": {\r\n            background: theme.palette.text.primary\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nconst SidenavThemeStyles = ({ children, classes }) => {\r\n  return <div className={classes.root}>{children}</div>;\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(SidenavThemeStyles);\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport SidenavThemeStyles from \"./SidenavThemeStyles\";\r\n\r\nconst SidenavTheme = ({ theme, settings, children }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <SidenavThemeStyles theme={theme} settings={settings}>\r\n        {children}\r\n      </SidenavThemeStyles>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default SidenavTheme;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Switch, Icon, MenuItem, Tooltip, IconButton } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport { logoutUser } from \"app/redux/actions/UserActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { MatxMenu } from \"matx\";\r\nimport Sidenav from \"../SharedCompoents/Sidenav\";\r\nimport Brand from \"../SharedCompoents/Brand\";\r\nimport SidenavTheme from \"../MatxTheme/SidenavTheme/SidenavTheme\";\r\nimport { isMdScreen } from \"utils\";\r\nimport { merge } from \"lodash\";\r\n\r\nconst styles = theme => ({});\r\n\r\nconst IconButtonWhite = withStyles(theme => ({\r\n  root: {\r\n    backgroundColor: \"transparent\",\r\n    padding: \"5px\"\r\n  }\r\n}))(IconButton);\r\n\r\nconst IconSmall = withStyles(() => ({\r\n  root: {\r\n    fontSize: \"1rem\"\r\n  }\r\n}))(Icon);\r\n\r\nclass Layout1Sidenav extends Component {\r\n  state = {\r\n    hidden: true\r\n  };\r\n\r\n  componentDidMount() {\r\n    // CLOSE SIDENAV ON ROUTE CHANGE ON MOBILE\r\n    this.unlistenRouteChange = this.props.history.listen((location, action) => {\r\n      if (isMdScreen()) {\r\n        this.updateSidebarMode({ mode: \"close\" });\r\n      }\r\n    });\r\n\r\n    setTimeout(() => {\r\n      this.setState({ hidden: false });\r\n    }, 400);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.unlistenRouteChange();\r\n  }\r\n\r\n  updateSidebarMode = sidebarSettings => {\r\n    let { settings, setLayoutSettings, setDefaultSettings } = this.props;\r\n    const updatedSettings = merge({}, settings, {\r\n      layout1Settings: {\r\n        leftSidebar: {\r\n          ...sidebarSettings\r\n        }\r\n      }\r\n    });\r\n\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  handleSidenavToggle = () => {\r\n    let {\r\n      settings: {\r\n        layout1Settings: {\r\n          leftSidebar: { mode }\r\n        }\r\n      }\r\n    } = this.props;\r\n\r\n    console.log(mode);\r\n\r\n    this.updateSidebarMode({ mode: mode === \"compact\" ? \"full\" : \"compact\" });\r\n  };\r\n\r\n  handleSignOut = () => {\r\n    this.props.logoutUser();\r\n  };\r\n\r\n  renderLogoSwitch = () => (\r\n    // Open Brand component file to replace logo and text\r\n    <Brand>\r\n      <Switch\r\n        className=\"sidenav__toggle show-on-pc\"\r\n        onChange={this.handleSidenavToggle}\r\n        checked={\r\n          !(this.props.settings.layout1Settings.leftSidebar.mode === \"full\")\r\n        }\r\n        color=\"secondary\"\r\n      />\r\n    </Brand>\r\n  );\r\n\r\n  renderUser = () => {\r\n    let { user } = this.props;\r\n    return (\r\n      <div className=\"sidenav__user\">\r\n        {/* <div className=\"username-photo\">\r\n          <img src={user.photoURL} alt=\"user\" />\r\n        </div> */}\r\n        <div className=\"ml-4\">\r\n          <span className=\"username\">\r\n            {/* <Icon>lock</Icon> */}\r\n            {user.nmusuario}\r\n          </span>\r\n          <div className=\"user__menu\">\r\n            <MatxMenu\r\n              menuButton={\r\n                <Tooltip title=\"Settings\">\r\n                  <IconButtonWhite\r\n                    aria-label=\"Delete\"\r\n                    className=\"\"\r\n                    size=\"small\"\r\n                  >\r\n                    <IconSmall> settings </IconSmall>\r\n                  </IconButtonWhite>\r\n                </Tooltip>\r\n              }\r\n            >\r\n              <MenuItem className=\"flex items-center\">\r\n                <Icon> home </Icon>\r\n                <span className=\"pl-4\"> Home </span>\r\n              </MenuItem>\r\n              <MenuItem className=\"flex items-center\">\r\n                <Icon> settings </Icon>\r\n                <span className=\"pl-4\"> Account Setting </span>\r\n              </MenuItem>\r\n            </MatxMenu>\r\n\r\n            <Tooltip title=\"Profile\">\r\n              <IconButtonWhite aria-label=\"Delete\" className=\"\" size=\"small\">\r\n                <IconSmall>person</IconSmall>\r\n              </IconButtonWhite>\r\n            </Tooltip>\r\n            <Tooltip title=\"Sign out\">\r\n              <IconButtonWhite\r\n                aria-label=\"Delete\"\r\n                className=\"\"\r\n                size=\"small\"\r\n                onClick={this.handleSignOut}\r\n              >\r\n                <IconSmall>exit_to_app</IconSmall>\r\n              </IconButtonWhite>\r\n            </Tooltip>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let { theme, settings } = this.props;\r\n    const sidenavTheme =\r\n      settings.themes[settings.layout1Settings.leftSidebar.theme] || theme;\r\n    return (\r\n      <SidenavTheme theme={sidenavTheme} settings={settings}>\r\n        <div className=\"sidenav\">\r\n          <div\r\n            className=\"sidenav__hold\"\r\n            style={{\r\n              backgroundImage: `url(${settings.layout1Settings.leftSidebar.bgImgURL})`\r\n            }}\r\n          >\r\n            {!this.state.hidden && (\r\n              <Fragment>\r\n                {this.renderLogoSwitch()}\r\n                <Sidenav>{this.renderUser()}</Sidenav>\r\n              </Fragment>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </SidenavTheme>\r\n    );\r\n  }\r\n}\r\n\r\nLayout1Sidenav.propTypes = {\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: PropTypes.object.isRequired,\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setDefaultSettings: PropTypes.func.isRequired,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  logoutUser: PropTypes.func.isRequired,\r\n  user: state.user,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(\r\n    connect(mapStateToProps, {\r\n      setLayoutSettings,\r\n      setDefaultSettings,\r\n      logoutUser\r\n    })(Layout1Sidenav)\r\n  )\r\n);\r\n","import React from \"react\";\r\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { Button, Toolbar, AppBar } from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Footer = ({ theme, settings }) => {\r\n  const footerTheme = settings.themes[settings.footer.theme] || theme;\r\n  return (\r\n    <></>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(\r\n  {},\r\n  { withTheme: true }\r\n)(connect(mapStateToProps, {})(Footer));\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { Fab, IconButton, Icon, useMediaQuery } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { merge } from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\nimport { classList } from \"utils\";\r\n\r\nconst styles = theme => ({\r\n  toggle: {\r\n    position: \"fixed\",\r\n    right: \"-30px\",\r\n    bottom: \"20px\",\r\n    zIndex: 9999,\r\n    transition: \"all 0.15s ease\",\r\n    \"&.open\": {\r\n      right: \"10px\"\r\n    }\r\n  }\r\n});\r\n\r\nconst SecondarySidebarToggle = ({ classes, settings, setLayoutSettings }) => {\r\n  let isMobile = useMediaQuery(\"(max-width:767px)\");\r\n\r\n  const toggle = () => {\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        secondarySidebar: { open: !settings.secondarySidebar.open }\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLayoutSettings(\r\n      merge({}, settings, {\r\n        secondarySidebar: { open: !isMobile }\r\n      })\r\n    );\r\n  }, [isMobile, setLayoutSettings]);\r\n\r\n  return (\r\n    <div\r\n      className={\r\n        classes.toggle +\r\n        \" \" +\r\n        classList({\r\n          open: settings.secondarySidebar.open\r\n        })\r\n      }\r\n    >\r\n      {settings.secondarySidebar.open && (\r\n        <IconButton onClick={toggle} size=\"small\" aria-label=\"toggle\">\r\n          <Icon>arrow_right</Icon>\r\n        </IconButton>\r\n      )}\r\n      {!settings.secondarySidebar.open && (\r\n        <Fab\r\n          variant=\"extended\"\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          aria-label=\"add\"\r\n          className=\"pr-9\"\r\n          onClick={toggle}\r\n        >\r\n          <Icon>arrow_left</Icon>\r\n        </Fab>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  setLayoutSettings: PropTypes.func.isRequired\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { setLayoutSettings })(SecondarySidebarToggle)\r\n);\r\n","import { Badge } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\"\r\n\r\nconst BadgeSelected = withStyles(theme => ({\r\n  badge: {\r\n    top: \"0\",\r\n    right: \"0\",\r\n    height: \"32px\",\r\n    width: \"32px\",\r\n    borderRadius: \"50%\"\r\n  }\r\n}))(Badge);\r\n\r\nexport default BadgeSelected;\r\n","\r\nexport const mainThemes = ['purple1', 'purple2', 'blue', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const mainSidebarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];\r\n\r\nexport const topbarThemes = ['white', 'slateDark1', 'slateDark2', 'purpleDark1', 'purpleDark2', 'blueDark'];","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  FormGroup,\r\n  Icon,\r\n  Switch,\r\n  Grid,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { get } from \"lodash\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainSidebarThemes, topbarThemes } from \"./customizerOptions\";\r\n\r\nconst sidebarBG = [\r\n  \"/assets/images/sidebar/sidebar-bg-dark.jpg\",\r\n  \"/assets/images/sidebar/sidebar-bg-light.jpg\"\r\n];\r\n\r\nconst Layout1Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Sidebar theme</div>\r\n        <div className=\"colors\">\r\n          {mainSidebarThemes\r\n            // .filter(c => themeColors[c].palette.type === \"dark\")\r\n            .map((color, i) => (\r\n              <Tooltip key={i} title={color} placement=\"top\">\r\n                <div\r\n                  className=\"color\"\r\n                  onClick={() =>\r\n                    handleChange(\"layout1Settings.leftSidebar.theme\", color)\r\n                  }\r\n                  style={{\r\n                    backgroundColor: themeColors[color].palette.primary.main\r\n                  }}\r\n                >\r\n                  {settings.layout1Settings.leftSidebar.theme === color && (\r\n                    <Icon>done</Icon>\r\n                  )}\r\n                  <div className={settings.themes[color].palette.type}></div>\r\n                </div>\r\n              </Tooltip>\r\n            ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {topbarThemes.map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout1Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout1Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Sidebar mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"Sidebar\"\r\n            name=\"leftSidebar\"\r\n            value={settings.layout1Settings.leftSidebar.mode}\r\n            onChange={handleControlChange(\"layout1Settings.leftSidebar.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel value=\"close\" control={<Radio />} label=\"Close\" />\r\n            <FormControlLabel\r\n              value=\"compact\"\r\n              control={<Radio />}\r\n              label=\"Compact\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n\r\n      <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted mb-8\">Sidebar background image</div>\r\n\r\n        <div className=\"layout-boxes sidebar-bg\">\r\n          <Grid container spacing={3}>\r\n            {sidebarBG.map((bg, i) => (\r\n              <Grid item lg={4} key={i}>\r\n                <BadgeSelected\r\n                  color=\"primary\"\r\n                  className=\"layout-box mr-4\"\r\n                  badgeContent={<Icon>done</Icon>}\r\n                  invisible={\r\n                    settings.layout1Settings.leftSidebar.bgImgURL !== bg\r\n                  }\r\n                >\r\n                  <Paper\r\n                    onClick={() =>\r\n                      handleChange(\"layout1Settings.leftSidebar.bgImgURL\", bg)\r\n                    }\r\n                    className=\"h-160\"\r\n                  >\r\n                    <img src={bg} alt=\"\" />\r\n                  </Paper>\r\n                </BadgeSelected>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </div>\r\n      </div>\r\n\r\n      {/* <div className=\"mb-8 mx-3\">\r\n        <div className=\"text-muted\">Sidebar background opacity</div>\r\n        <Slider\r\n          value={settings.layout1Settings.leftSidebar.bgOpacity}\r\n          onChange={(event, value) =>\r\n            handleChange(\"layout1Settings.leftSidebar.bgOpacity\", value)\r\n          }\r\n          marks={true}\r\n          step={0.02}\r\n          max={1}\r\n          min={0.5}\r\n          valueLabelDisplay=\"auto\"\r\n          aria-labelledby=\"sidebar-bgOpacity\"\r\n        />\r\n      </div> */}\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Topbar</FormLabel>\r\n          <FormGroup>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"show\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.show\")}\r\n                />\r\n              }\r\n              label=\"Show\"\r\n            />\r\n\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={get(settings.layout1Settings.topbar, \"fixed\")}\r\n                  onChange={handleControlChange(\"layout1Settings.topbar.fixed\")}\r\n                />\r\n              }\r\n              label=\"Fixed\"\r\n            />\r\n          </FormGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout1Customizer;\r\n","import React, { Fragment } from \"react\";\r\nimport {\r\n  Tooltip,\r\n  Radio,\r\n  RadioGroup,\r\n  Icon,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel\r\n} from \"@material-ui/core\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\n\r\nconst Layout2Customizer = ({ settings, handleChange, handleControlChange }) => {\r\n  return (\r\n    <Fragment>\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Topbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.topbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.topbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mb-4 mx-3\">\r\n        <div className=\"text-muted mb-4\">Navbar theme</div>\r\n        <div className=\"colors\">\r\n          {Object.keys(themeColors).map((color, i) => (\r\n            <Tooltip key={i} title={color} placement=\"top\">\r\n              <div\r\n                className=\"color\"\r\n                onClick={() =>\r\n                  handleChange(\"layout2Settings.navbar.theme\", color)\r\n                }\r\n                style={{\r\n                  backgroundColor: themeColors[color].palette.primary.main\r\n                }}\r\n              >\r\n                {settings.layout2Settings.navbar.theme === color && (\r\n                  <Icon>done</Icon>\r\n                )}\r\n                <div className={settings.themes[color].palette.type}></div>\r\n              </div>\r\n            </Tooltip>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mx-3 mb-6\">\r\n        <FormControl component=\"fieldset\">\r\n          <FormLabel component=\"legend\">Layout mode</FormLabel>\r\n          <RadioGroup\r\n            aria-label=\"layout-mode\"\r\n            name=\"layoutMode\"\r\n            value={settings.layout2Settings.mode}\r\n            onChange={handleControlChange(\"layout2Settings.mode\")}\r\n          >\r\n            <FormControlLabel value=\"full\" control={<Radio />} label=\"Full\" />\r\n            <FormControlLabel\r\n              value=\"contained\"\r\n              control={<Radio />}\r\n              label=\"Contained\"\r\n            />\r\n            <FormControlLabel value=\"boxed\" control={<Radio />} label=\"Boxed\" />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Layout2Customizer;\r\n","import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  setLayoutSettings,\r\n  setDefaultSettings\r\n} from \"app/redux/actions/LayoutActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  Icon,\r\n  IconButton,\r\n  Button,\r\n  FormGroup,\r\n  Tooltip,\r\n  Switch,\r\n  FormControlLabel,\r\n  FormControl,\r\n  FormLabel,\r\n  Paper\r\n} from \"@material-ui/core\";\r\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { merge, get, set } from \"lodash\";\r\nimport Layout1Customizer from \"./Layout1Customizer\";\r\nimport Layout2Customizer from \"./Layout2Customizer\";\r\nimport { themeColors } from \"../../MatxTheme/themeColors\";\r\nimport BadgeSelected from \"./BadgeSelected\";\r\nimport { mainThemes, topbarThemes } from \"./customizerOptions\";\r\n\r\nconst styles = theme => ({\r\n  root: {}\r\n});\r\n\r\nconst MatxCustomizer = props => {\r\n  const [open, setOpen] = useState(false);\r\n\r\n  let { settings, classes, setLayoutSettings, setDefaultSettings } = props;\r\n\r\n  const demoLayouts = [\r\n    {\r\n      name: \"Light Sidebar\",\r\n      thumbnail: \"/assets/images/screenshots/layout1-customizer.png\",\r\n      isPro: false,\r\n      options: {\r\n        activeLayout: \"layout1\",\r\n        activeTheme: \"purple1\",\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            theme: \"white\",\r\n            bgOpacity: 0.98\r\n          },\r\n          topbar: {\r\n            theme: \"purpleDark1\",\r\n            fixed: true\r\n          }\r\n        },\r\n        footer: {\r\n          theme: \"slateDark1\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: \"Dark Sidebar\",\r\n      thumbnail: \"/assets/images/screenshots/layout2-customizer.png\",\r\n      isPro: false,\r\n      options: {\r\n        activeLayout: \"layout1\",\r\n        activeTheme: \"purple1\",\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            theme: \"slateDark1\",\r\n            bgOpacity: 0.92\r\n          },\r\n          topbar: {\r\n            theme: \"purpleDark1\",\r\n            fixed: false\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: \"Dark Theme\",\r\n      thumbnail: \"/assets/images/screenshots/layout3-customizer.png\",\r\n      isPro: false,\r\n      options: {\r\n        activeLayout: \"layout1\",\r\n        activeTheme: \"purpleDark1\",\r\n        layout1Settings: {\r\n          leftSidebar: {\r\n            theme: \"slateDark1\",\r\n            bgOpacity: 0.92\r\n          },\r\n          topbar: {\r\n            theme: \"purpleDark1\",\r\n            fixed: false\r\n          }\r\n        },\r\n        footer: {\r\n          theme: \"slateDark1\"\r\n        }\r\n      }\r\n    },\r\n    {\r\n      name: \"Horizontal Navigation\",\r\n      thumbnail: \"/assets/images/screenshots/layout4-customizer.png\",\r\n      isPro: true,\r\n      options: {\r\n        activeLayout: \"layout2\",\r\n        activeTheme: \"purple1\",\r\n        layout2Settings: {\r\n          mode: \"full\"\r\n          // topbar: {\r\n          //   theme: \"slateDark1\"\r\n          // }\r\n        },\r\n        footer: {\r\n          theme: \"slateDark1\"\r\n        }\r\n      }\r\n    }\r\n  ];\r\n\r\n  const updateSettings = newSettings => {\r\n    let updatedSettings = merge({}, settings, newSettings);\r\n    setLayoutSettings(updatedSettings);\r\n    setDefaultSettings(updatedSettings);\r\n  };\r\n\r\n  const handleChange = (name, value) => {\r\n    let { settings } = props;\r\n    let updatedSettings = set(settings, name, value);\r\n\r\n    updateSettings(updatedSettings);\r\n  };\r\n\r\n  const handleControlChange = name => event => {\r\n    let controlValue =\r\n      event.target.type === \"checkbox\"\r\n        ? event.target.checked\r\n        : event.target.value;\r\n    handleChange(name, controlValue);\r\n  };\r\n\r\n  const tooglePanel = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  let activeTheme = { ...settings.themes[settings.activeTheme] };\r\n  // console.log(activeTheme);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Tooltip title=\"Theme Settings\" placement=\"left\">\r\n        <IconButton\r\n          size=\"small\"\r\n          aria-label=\"delete\"\r\n          className=\"my-3\"\r\n          onClick={tooglePanel}\r\n        >\r\n          <Icon className=\"spin\">settings</Icon>\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      {open && (\r\n        <ThemeProvider theme={activeTheme}>\r\n          <div\r\n            className={`matx-customizer pb-8 ${classes.root}`}\r\n            style={{\r\n              backgroundColor: activeTheme.palette.background.default\r\n            }}\r\n          >\r\n            <div className=\"flex felx-row items-center p-4 mb-4 min-h-64 elevation-z6\">\r\n              <Icon color=\"primary\">settings</Icon>\r\n              <h5 className=\"mb-0 ml-2\">Theme Settings</h5>\r\n              <IconButton onClick={tooglePanel} className=\"customizer-close\">\r\n                <Icon>close</Icon>\r\n              </IconButton>\r\n            </div>\r\n            <Scrollbar options={{ suppressScrollX: true }} className=\"px-4\">\r\n              <div className=\"mt-2 mb-8 mx-3\">\r\n                <div className=\"text-muted\">Layouts</div>\r\n\r\n                <div className=\"layout-boxes\">\r\n                  {demoLayouts.map(layout => (\r\n                    <BadgeSelected\r\n                      color=\"secondary\"\r\n                      className=\"layout-box\"\r\n                      badgeContent={\"Pro\"}\r\n                      invisible={!layout.isPro}\r\n                      key={layout.name}\r\n                    >\r\n                      <Paper\r\n                        onClick={() => updateSettings(layout.options)}\r\n                        elevation={4}\r\n                      >\r\n                        <span className=\"layout-name\">\r\n                          <Button variant=\"contained\" color=\"secondary\">\r\n                            {layout.name}\r\n                          </Button>\r\n                        </span>\r\n\r\n                        <img src={layout.thumbnail} alt={layout.name} />\r\n                      </Paper>\r\n                    </BadgeSelected>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              {/* END LAYOUT */}\r\n\r\n              <div className=\"mb-4 mx-3\">\r\n                <div className=\"text-muted mb-4\">Main theme</div>\r\n                <div className=\"colors\">\r\n                  {mainThemes.map((color, i) => (\r\n                    <Tooltip key={i} title={color} placement=\"top\">\r\n                      <div\r\n                        className=\"color\"\r\n                        onClick={() => updateSettings({ activeTheme: color })}\r\n                        style={{\r\n                          backgroundColor:\r\n                            themeColors[color].palette.primary.main\r\n                        }}\r\n                      >\r\n                        {settings.activeTheme === color && <Icon>done</Icon>}\r\n                        <div\r\n                          className={settings.themes[color].palette.type}\r\n                        ></div>\r\n                      </div>\r\n                    </Tooltip>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {settings.activeLayout === \"layout1\" && (\r\n                <Layout1Customizer\r\n                  settings={settings}\r\n                  handleChange={handleChange}\r\n                  handleControlChange={handleControlChange}\r\n                />\r\n              )}\r\n\r\n              {settings.activeLayout === \"layout2\" && (\r\n                <Layout2Customizer\r\n                  settings={settings}\r\n                  handleChange={handleChange}\r\n                  handleControlChange={handleControlChange}\r\n                />\r\n              )}\r\n\r\n              <div className=\"mx-3 mb-6\">\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">Footer</FormLabel>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={get(settings.footer, \"show\")}\r\n                          onChange={handleControlChange(\"footer.show\")}\r\n                        />\r\n                      }\r\n                      label=\"Show\"\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={get(\r\n                            settings.layout1Settings.footer,\r\n                            \"fixed\"\r\n                          )}\r\n                          onChange={handleControlChange(\"footer.fixed\")}\r\n                        />\r\n                      }\r\n                      label=\"Fixed\"\r\n                    />\r\n                  </FormGroup>\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div className=\"mx-3 mb-6\">\r\n                <FormControl component=\"fieldset\">\r\n                  <FormLabel component=\"legend\">Secondary sidebar</FormLabel>\r\n                  <FormGroup>\r\n                    <FormControlLabel\r\n                      control={\r\n                        <Switch\r\n                          checked={get(settings.secondarySidebar, \"show\")}\r\n                          onChange={handleControlChange(\r\n                            \"secondarySidebar.show\"\r\n                          )}\r\n                        />\r\n                      }\r\n                      label=\"Show\"\r\n                    />\r\n                  </FormGroup>\r\n                </FormControl>\r\n              </div>\r\n\r\n              <div className=\"mb-4 mx-3\">\r\n                <div className=\"text-muted mb-4\">Secondary sidebar theme</div>\r\n                <div className=\"colors\">\r\n                  {topbarThemes.map((color, i) => (\r\n                    <Tooltip key={i} title={color} placement=\"top\">\r\n                      <div\r\n                        className=\"color\"\r\n                        onClick={() =>\r\n                          handleChange(\"secondarySidebar.theme\", color)\r\n                        }\r\n                        style={{\r\n                          backgroundColor:\r\n                            themeColors[color].palette.primary.main\r\n                        }}\r\n                      >\r\n                        {settings.secondarySidebar.theme === color && (\r\n                          <Icon>done</Icon>\r\n                        )}\r\n                        <div\r\n                          className={settings.themes[color].palette.type}\r\n                        ></div>\r\n                      </div>\r\n                    </Tooltip>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"mb-4 mx-3\">\r\n                <div className=\"text-muted mb-4\">Footer theme</div>\r\n                <div className=\"colors\">\r\n                  {topbarThemes.map((color, i) => (\r\n                    <Tooltip key={i} title={color} placement=\"top\">\r\n                      <div\r\n                        className=\"color\"\r\n                        onClick={() => handleChange(\"footer.theme\", color)}\r\n                        style={{\r\n                          backgroundColor:\r\n                            themeColors[color].palette.primary.main\r\n                        }}\r\n                      >\r\n                        {settings.footer.theme === color && <Icon>done</Icon>}\r\n                        <div\r\n                          className={settings.themes[color].palette.type}\r\n                        ></div>\r\n                      </div>\r\n                    </Tooltip>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </Scrollbar>\r\n          </div>\r\n        </ThemeProvider>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings,\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  setDefaultSettings: PropTypes.func.isRequired\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { setLayoutSettings, setDefaultSettings })(\r\n    MatxCustomizer\r\n  )\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { IconButton, Icon } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { withRouter, Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { classList } from \"utils\";\r\nimport MatxCustomizer from \"../MatxCustomizer/MatxCustomizer\";\r\nimport ShoppingCart from \"../ShoppingCart\";\r\nconst width = \"50px\";\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    position: \"fixed\",\r\n    height: \"100vh\",\r\n    width,\r\n    right: 0,\r\n    bottom: 0,\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    boxShadow: theme.shadows[8],\r\n    backgroundColor: theme.palette.primary.main,\r\n    zIndex: 98,\r\n    transition: \"all 0.15s ease\"\r\n  },\r\n  \"@global\": {\r\n    \"@media screen and (min-width: 767px)\": {\r\n      \".content-wrap, .layout2.layout-contained, .layout2.layout-full\": {\r\n        marginRight: width\r\n      },\r\n      \".matx-customizer\": {\r\n        right: width\r\n      }\r\n    },\r\n    \"@media screen and (max-width: 959px)\": {\r\n      \".toolbar-menu-wrap .menu-area\": {\r\n        width: `calc(100% - ${width})`\r\n      }\r\n    }\r\n  }\r\n});\r\n\r\nclass SecondarySidebarContent extends Component {\r\n  render() {\r\n    let { classes } = this.props;\r\n\r\n    return (\r\n      <div\r\n        className={\r\n          classes.root +\r\n          \" \" +\r\n          classList({\r\n            \"secondary-sidebar\": true\r\n          })\r\n        }\r\n      >\r\n        <span className=\"m-auto\"></span>\r\n\r\n        <MatxCustomizer />\r\n\r\n        <ShoppingCart />\r\n\r\n        <Link to=\"/chat\">\r\n          <IconButton size=\"small\" aria-label=\"delete\" className=\"my-3\">\r\n            <Icon>comments</Icon>\r\n          </IconButton>\r\n        </Link>\r\n\r\n        <span className=\"m-auto\"></span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  withRouter(connect(mapStateToProps, {})(SecondarySidebarContent))\r\n);\r\n","import React from \"react\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\n\r\nconst SecondarySidenavTheme = ({ theme, classes, children, open }) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n};\r\nexport default SecondarySidenavTheme\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport SecondarySidebarToggle from \"./SecondarySidebarToggle\";\r\nimport SecondarySidebarContent from \"./SecondarySidebarContent\";\r\nimport SecondarySidenavTheme from \"../../MatxTheme/SecondarySidenavTheme/SecondarySidenavTheme\";\r\n\r\nconst SecondarySidebar = ({ settings }) => {\r\n  const secondarySidebarTheme =\r\n    settings.themes[settings.secondarySidebar.theme];\r\n\r\n  return (\r\n    <SecondarySidenavTheme theme={secondarySidebarTheme}>\r\n      {settings.secondarySidebar.open && (\r\n        <SecondarySidebarContent />\r\n      )}\r\n      <SecondarySidebarToggle />\r\n    </SecondarySidenavTheme>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(SecondarySidebar);\r\n","import React, { useContext } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { setLayoutSettings } from \"app/redux/actions/LayoutActions\";\r\nimport { withStyles, ThemeProvider } from \"@material-ui/core/styles\";\r\nimport Scrollbar from \"react-perfect-scrollbar\";\r\nimport { classList } from \"utils\";\r\nimport { renderRoutes } from \"react-router-config\";\r\nimport Layout1Topbar from \"./Layout1Topbar\";\r\nimport Layout1Sidenav from \"./Layout1Sidenav\";\r\nimport Footer from \"../SharedCompoents/Footer\";\r\nimport SecondarySidebar from \"../SharedCompoents/SecondarySidebar/SecondarySidebar\";\r\nimport AppContext from \"app/appContext\";\r\nimport { MatxSuspense } from \"matx\";\r\n\r\nconst styles = theme => {\r\n  return {\r\n    layout: {\r\n      backgroundColor: theme.palette.background.default\r\n    }\r\n  };\r\n};\r\n\r\nconst Layout1 = props => {\r\n  const { routes } = useContext(AppContext);\r\n  let { settings, classes, theme } = props;\r\n  let { layout1Settings } = settings;\r\n  const topbarTheme = settings.themes[layout1Settings.topbar.theme];\r\n  let layoutClasses = {\r\n    [classes.layout]: true,\r\n    [`${settings.activeLayout} sidenav-${layout1Settings.leftSidebar.mode} theme-${theme.palette.type} flex`]: true,\r\n    \"topbar-fixed\": layout1Settings.topbar.fixed\r\n  };\r\n\r\n  return (\r\n    <div className={classList(layoutClasses)}>\r\n      {layout1Settings.leftSidebar.show && <Layout1Sidenav />}\r\n\r\n      <div className=\"content-wrap position-relative\">\r\n        {layout1Settings.topbar.show && layout1Settings.topbar.fixed && (\r\n          <ThemeProvider theme={topbarTheme}>\r\n            <Layout1Topbar fixed={true} className=\"elevation-z8\" />\r\n          </ThemeProvider>\r\n        )}\r\n\r\n        {settings.perfectScrollbar && (\r\n          <Scrollbar className=\"scrollable-content\">\r\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\r\n              <ThemeProvider theme={topbarTheme}>\r\n                <Layout1Topbar />\r\n              </ThemeProvider>\r\n            )}\r\n            <div className=\"content\">\r\n              <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\r\n            </div>\r\n            <div className=\"my-auto\" />\r\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n          </Scrollbar>\r\n        )}\r\n\r\n        {!settings.perfectScrollbar && (\r\n          <div className=\"scrollable-content\">\r\n            {layout1Settings.topbar.show && !layout1Settings.topbar.fixed && (\r\n              <Layout1Topbar />\r\n            )}\r\n            <div className=\"content\">\r\n              <MatxSuspense>{renderRoutes(routes)}</MatxSuspense>\r\n            </div>\r\n            <div className=\"my-auto\" />\r\n            {settings.footer.show && !settings.footer.fixed && <Footer />}\r\n          </div>\r\n        )}\r\n\r\n        {settings.footer.show && settings.footer.fixed && <Footer />}\r\n      </div>\r\n      {settings.secondarySidebar.show && <SecondarySidebar />}\r\n    </div>\r\n  );\r\n};\r\n\r\nLayout1.propTypes = {\r\n  settings: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  setLayoutSettings: PropTypes.func.isRequired,\r\n  settings: state.layout.settings\r\n});\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  connect(mapStateToProps, { setLayoutSettings })(Layout1)\r\n);\r\n"],"sourceRoot":""}