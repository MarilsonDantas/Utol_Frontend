{"version":3,"sources":["app/views/material-kit/forms/SimpleForm.jsx","app/views/forms/BasicForm.jsx"],"names":["SimpleForm","Component","state","username","firstName","email","date","Date","creditCard","mobile","password","confirmPassword","gender","agreement","handleSubmit","event","handleChange","persist","this","setState","target","name","value","handleDateChange","componentDidMount","ValidatorForm","addValidationRule","componentWillUnmount","removeValidationRule","render","ref","onSubmit","onError","errors","container","spacing","item","lg","md","sm","xs","className","label","onChange","type","validators","errorMessages","utils","DateFnsUtils","margin","id","inputVariant","autoOk","KeyboardButtonProps","row","control","color","labelPlacement","variant","BasicForm","routeSegments","path"],"mappings":"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","file":"static/js/25.720834ba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\nimport {\r\n  Button,\r\n  Icon,\r\n  Grid,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Checkbox\r\n} from \"@material-ui/core\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\nimport \"date-fns\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\n\r\nclass SimpleForm extends Component {\r\n  state = {\r\n    username: \"\",\r\n    firstName: \"\",\r\n    email: \"\",\r\n    date: new Date(),\r\n    creditCard: \"\",\r\n    mobile: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    gender: \"\",\r\n    agreement: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    // custom rule will have name 'isPasswordMatch'\r\n    ValidatorForm.addValidationRule(\"isPasswordMatch\", value => {\r\n      if (value !== this.state.password) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove rule when it is not needed\r\n    ValidatorForm.removeValidationRule(\"isPasswordMatch\");\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    // console.log(\"submitted\");\r\n    // console.log(event);\r\n  };\r\n\r\n  handleChange = event => {\r\n    event.persist();\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleDateChange = date => {\r\n    // console.log(date);\r\n\r\n    this.setState({ date });\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      username,\r\n      firstName,\r\n      creditCard,\r\n      mobile,\r\n      password,\r\n      confirmPassword,\r\n      gender,\r\n      date,\r\n      email\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        <ValidatorForm\r\n          ref=\"form\"\r\n          onSubmit={this.handleSubmit}\r\n          onError={errors => null}\r\n        >\r\n          <Grid container spacing={6}>\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextValidator\r\n                className=\"mb-4 w-full\"\r\n                label=\"Username (Min length 4, Max length 9)\"\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                name=\"username\"\r\n                value={username}\r\n                validators={[\r\n                  \"required\",\r\n                  \"minStringLength: 4\",\r\n                  \"maxStringLength: 9\"\r\n                ]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n              <TextValidator\r\n                className=\"mb-4 w-full\"\r\n                label=\"First Name\"\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                name=\"firstName\"\r\n                value={firstName}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n              <TextValidator\r\n                className=\"mb-4 w-full\"\r\n                label=\"Email\"\r\n                onChange={this.handleChange}\r\n                type=\"email\"\r\n                name=\"email\"\r\n                value={email}\r\n                validators={[\"required\", \"isEmail\"]}\r\n                errorMessages={[\"this field is required\", \"email is not valid\"]}\r\n              />\r\n\r\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                  className=\"mb-4 w-full\"\r\n                  margin=\"none\"\r\n                  id=\"mui-pickers-date\"\r\n                  label=\"Date picker\"\r\n                  inputVariant=\"standard\"\r\n                  type=\"text\"\r\n                  autoOk={true}\r\n                  value={date}\r\n                  onChange={this.handleDateChange}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\"\r\n                  }}\r\n                />\r\n              </MuiPickersUtilsProvider>\r\n              <TextValidator\r\n                className=\"mb-8 w-full\"\r\n                label=\"Credit Card\"\r\n                onChange={this.handleChange}\r\n                type=\"number\"\r\n                name=\"creditCard\"\r\n                value={creditCard}\r\n                validators={[\r\n                  \"required\",\r\n                  \"minStringLength:16\",\r\n                  \"maxStringLength: 16\"\r\n                ]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item lg={6} md={6} sm={12} xs={12}>\r\n              <TextValidator\r\n                className=\"mb-4 w-full\"\r\n                label=\"Mobile Nubmer\"\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                name=\"mobile\"\r\n                value={mobile}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n              <TextValidator\r\n                className=\"mb-4 w-full\"\r\n                label=\"Password\"\r\n                onChange={this.handleChange}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                value={password}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n              />\r\n              <TextValidator\r\n                className=\"mb-4 w-full\"\r\n                label=\"Confirm Password\"\r\n                onChange={this.handleChange}\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                value={confirmPassword}\r\n                validators={[\"required\", \"isPasswordMatch\"]}\r\n                errorMessages={[\r\n                  \"this field is required\",\r\n                  \"password didn't match\"\r\n                ]}\r\n              />\r\n              <RadioGroup\r\n                className=\"mb-4\"\r\n                value={gender}\r\n                name=\"gender\"\r\n                onChange={this.handleChange}\r\n                row\r\n              >\r\n                <FormControlLabel\r\n                  value=\"Male\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label=\"Male\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Female\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label=\"Female\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n                <FormControlLabel\r\n                  value=\"Others\"\r\n                  control={<Radio color=\"secondary\" />}\r\n                  label=\"Others\"\r\n                  labelPlacement=\"end\"\r\n                />\r\n              </RadioGroup>\r\n              <FormControlLabel\r\n                control={<Checkbox />}\r\n                label=\"I have read and agree to the terms of service.\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Button color=\"primary\" variant=\"contained\" type=\"submit\">\r\n            <Icon>send</Icon>\r\n            <span className=\"pl-2 capitalize\">Submit</span>\r\n          </Button>\r\n        </ValidatorForm>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleForm;\r\n","import React, { Component } from \"react\";\r\nimport { Breadcrumb } from \"matx\";\r\nimport SimpleForm from \"../material-kit/forms/SimpleForm\";\r\nimport { Card } from \"@material-ui/core\";\r\n\r\nclass BasicForm extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"m-sm-30\">\r\n        <div  className=\"mb-sm-30\">\r\n          <Breadcrumb\r\n            routeSegments={[\r\n              { name: \"Forms\", path: \"/forms\" },\r\n              { name: \"Basic\" }\r\n            ]}\r\n          />\r\n        </div>\r\n        <Card className=\"px-6 pt-2 pb-4\"><SimpleForm /></Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BasicForm;\r\n"],"sourceRoot":""}